<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Learnit</title>
  
  <subtitle>挨踢汪汪的杂货店</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://higoge.github.io/"/>
  <updated>2018-05-13T12:49:01.850Z</updated>
  <id>http://higoge.github.io/</id>
  
  <author>
    <name>挨踢汪汪 (Jeremy Wong)</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[置顶]-博客目录</title>
    <link href="http://higoge.github.io/9999/12/31/toc/"/>
    <id>http://higoge.github.io/9999/12/31/toc/</id>
    <published>9999-12-31T15:59:59.000Z</published>
    <updated>2018-05-13T12:49:01.850Z</updated>
    
    <content type="html"><![CDATA[<p>博客文章越来越多，分类和标签已经不能满足快速搜索的要求，将所有的文章列一个目录置顶，直接在本文搜索可以大大提高效率。<br>据目测，本文将会很长很长，而且会一直变长。<br>如果本博客对你有所帮助，请<a href="https://higoge.github.io/about/">小额赞助</a>。<br><a id="more"></a></p><h2 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h2><p>非技术类文章。<br><a href="https://higoge.github.io/2015/06/19/essay01/">随笔01：第一篇</a><br><a href="https://higoge.github.io/2015/06/23/essay02/">随笔02：关于海狗哥的流媒体空间资料一些说明</a><br><a href="https://higoge.github.io/2015/08/31/essay03/">随笔03：无题</a></p><h2 id="Linux理论"><a href="#Linux理论" class="headerlink" title="Linux理论"></a>Linux理论</h2><p>介绍Linux的理论知识。<br><a href="https://higoge.github.io/2015/07/28/th-linux01/">Linux理论01：Linux发行版的选择</a><br><a href="https://higoge.github.io/2015/07/30/th-linux02/">Linux理论02：CentOS6.6的安装</a><br><a href="https://higoge.github.io/2015/07/31/th-linux03/">Linux理论03：安装VMware Tools和配置共享文件夹</a><br><a href="https://higoge.github.io/2015/08/03/th-linux04/">Linux理论04：网络配置和其他配置</a><br><a href="https://higoge.github.io/2015/08/10/th-linux05/">Linux理论05：Linux的目录结构</a><br><a href="https://higoge.github.io/2015/08/27/th-linux06/">Linux理论06：Linux的启动级别</a><br><a href="https://higoge.github.io/2017/04/02/th-linux07/">Linux理论07：Linux的Swap分区大小</a></p><h2 id="Linux命令"><a href="#Linux命令" class="headerlink" title="Linux命令"></a>Linux命令</h2><p>介绍Linux的基础命令，是每个Linux从业者必须掌握的命令。<br><a href="https://higoge.github.io/2015/08/12/cm-linux01/">Linux命令01：命令的反馈形式</a><br><a href="https://higoge.github.io/2015/08/13/cm-linux02/">Linux命令02：nano编辑器</a><br><a href="https://higoge.github.io/2015/08/17/cm-linux03/">Linux命令03：man</a><br><a href="https://higoge.github.io/2015/08/18/cm-linux04/">Linux命令04：info</a><br><a href="https://higoge.github.io/2015/08/21/cm-linux05/">Linux命令05：重启关机</a><br><a href="https://higoge.github.io/2016/05/15/cm-linux06/">Linux命令06：VIM及快捷键脑图</a><br><a href="https://higoge.github.io/2017/01/26/cm-linux07/">Linux命令07：ls</a><br><a href="https://higoge.github.io/2017/01/28/cm-linux08/">Linux命令08：文件及目录管理(touch/rm/mv/cp/cd/pwd/mkdir)</a><br><a href="https://higoge.github.io/2017/03/19/cm-linux09/">Linux命令09：RPM</a><br><a href="https://higoge.github.io/2017/03/26/cm-linux10/">Linux命令10：Yum</a><br><a href="https://higoge.github.io/2017/04/16/cm-linux11/">Linux命令11：压缩及解压缩命令</a><br><a href="https://higoge.github.io/2018/01/01/cm-linux12/">Linux命令12：locate与updatedb</a><br><a href="https://higoge.coding.me/2018/01/21/cm-linux13/" target="_blank" rel="noopener">Linux命令13：date与hwclock</a></p><h2 id="Linux进阶"><a href="#Linux进阶" class="headerlink" title="Linux进阶"></a>Linux进阶</h2><p>介绍Linux的进阶命令和配置，初学者可略过。<br><a href="https://higoge.github.io/2015/07/20/ad-linux01/">Linux进阶01：tmux</a><br><a href="https://higoge.github.io/2015/07/21/ad-linux02/">Linux进阶02：tmux好基友Tmuxinator</a><br><a href="https://higoge.github.io/2015/08/14/ad-linux03/">Linux进阶03：双网卡绑定</a><br><a href="https://higoge.github.io/2015/08/20/ad-linux04/">Linux进阶04：cheat–命令的栗子</a><br><a href="https://higoge.github.io/2015/08/28/ad-linux05/">Linux进阶05：忘记root密码咋办</a><br><a href="https://higoge.github.io/2017/01/12/ad-linux06/">Linux进阶06：Bash常用快捷键</a><br><a href="https://higoge.github.io/2017/02/04/ad-linux07/">Linux进阶07：Linux远程桌面配置</a><br><a href="https://higoge.github.io/2017/02/08/ad-linux08/">Linux进阶08：SSH相关操作</a><br><a href="https://higoge.github.io/2017/03/05/ad-linux09/">Linux进阶09：CentOS的Yum库设置</a><br><a href="https://higoge.github.io/2017/03/12/ad-linux10/">Linux进阶10：Yum本地库制作</a><br><a href="https://higoge.github.io/2017/04/09/ad-linux11/">Linux进阶11：CentOS系统救援</a><br><a href="https://higoge.github.io/2017/04/23/ad-linux12/">Linux进阶12：CentOS第三方库RepoForge(RpmForge)</a><br><a href="https://higoge.github.io/2017/05/07/ad-linux13/">Linux进阶13：rar和7z文件的压缩解压</a><br><a href="https://higoge.github.io/2018/01/14/ad-linux14/">Linux进阶14：NTP对时服务的配置及使用</a><br><a href="https://higoge.github.io/2018/01/28/ad-linux15/">Linux进阶15：Linux下MySQL数据库安装及配置</a><br><a href="https://higoge.github.io/2018/05/05/ad-linux16/">Linux进阶16：Linux下Oracle静默安装及配置</a></p><h2 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a>大数据</h2><p>记录大数据开源框架配置和使用的笔记和问题。<br><a href="https://higoge.github.io/2017/08/13/bd01/">大数据01：Hadoop环境搭建</a></p><h2 id="系统工具"><a href="#系统工具" class="headerlink" title="系统工具"></a>系统工具</h2><p>介绍本人包括但不限于Windows的常用工具。<br><a href="https://higoge.github.io/2015/07/15/tools01/">工具01：Cygwin的安装配置</a><br><a href="https://higoge.github.io/2015/07/22/tools02/">工具02：cmd的替代品ConEmu+Clink</a><br><a href="https://higoge.github.io/2015/07/23/tools03/">工具03：PuTTY常用配置</a><br><a href="https://higoge.github.io/2015/07/24/tools04/">工具04：PuTTY的小伙伴PuTTYgen和Plink</a><br><a href="https://higoge.github.io/2015/07/27/tools05/">工具05：XShell</a><br><a href="https://higoge.github.io/2015/07/29/tools06/">工具06：快速打开程序的方法</a><br><a href="https://higoge.github.io/2015/08/04/tools07/">工具07：等宽字体</a><br><a href="https://higoge.github.io/2015/12/08/tools08/">工具08：Hexo博客搭建过程</a><br><a href="https://higoge.github.io/2016/02/15/tools09/">工具09：资源管理器替代者：Total Commander</a><br><a href="https://higoge.github.io/2017/08/06/tools10/">工具10：Windows10的hosts文件修改</a></p><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><p><a href="https://higoge.github.io/2015/12/17/net01/">网络01：双无线路由器无缝对接设置</a><br><a href="https://higoge.github.io/2017/01/24/net02/">网络02：双网卡跨内外网路由设置</a><br><a href="https://higoge.github.io/2017/02/01/net03/">网络03：网络连通性测试的相关命令</a><br><a href="https://higoge.github.io/2017/02/14/net04/">网络04：双路由器无线桥接设置及副路由器设置原则</a></p><h2 id="狗急跳墙"><a href="#狗急跳墙" class="headerlink" title="狗急跳墙"></a>狗急跳墙</h2><p>介绍科学上网方法。<br><a href="https://higoge.github.io/2015/07/08/breakwall01/">狗急跳墙01：综述</a><br><a href="https://higoge.github.io/2015/07/09/breakwall02/">狗急跳墙02：GoAgent &amp; GoGo Tester【部分废弃】</a><br><a href="https://higoge.github.io/2015/07/10/breakwall03/">狗急跳墙03：Shadowsocks</a><br><a href="https://higoge.github.io/2015/07/13/breakwall04/">狗急跳墙04：OpenDNS</a><br><a href="https://higoge.github.io/2015/07/14/breakwall05/">狗急跳墙05：VPN Gate【废弃】</a><br><a href="https://higoge.github.io/2015/07/14/breakwall06/">狗急跳墙06：HostsTool【废弃】</a><br><a href="https://higoge.github.io/2015/12/11/breakwall07/">狗急跳墙07：XX-Net</a><br><a href="https://higoge.github.io/2017/11/25/breakwall08/">狗急跳墙08：XX-Net IPv6设置</a></p><h2 id="流媒体"><a href="#流媒体" class="headerlink" title="流媒体"></a>流媒体</h2><p>介绍开源流媒体软件相关内容。<br><a href="https://higoge.github.io/2015/07/16/sm01/">流媒体01：VLC-2.2.1编译</a><br><a href="https://higoge.github.io/2015/07/17/sm02/">流媒体02：Linux交叉编译VLC-2.2.1</a><br><a href="https://higoge.github.io/2015/08/19/sm03/">流媒体03：VLC2.2.1的ActiveX编译</a><br><a href="https://higoge.github.io/2015/12/14/sm04/">流媒体04：VLC2.2.1的Linux编译及调试</a></p><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><p>介绍计算机基础知识。<br><a href="https://higoge.github.io/2015/06/23/basic01/">基础01：比特、字节及进制</a><br><a href="https://higoge.github.io/2015/06/23/basic02/">基础02：内存的大小端</a><br><a href="https://higoge.github.io/2015/07/02/basic03/">基础03：原码、反码、补码</a><br><a href="https://higoge.github.io/2015/07/02/basic04/">基础04：移码和浮点数的二进制表示</a><br><a href="https://higoge.github.io/2015/08/07/basic05/">基础05：硬盘分区和硬盘模式</a><br><a href="https://higoge.github.io/2015/08/11/basic06/">基础06：开源协议</a></p><h2 id="Git基础"><a href="#Git基础" class="headerlink" title="Git基础"></a>Git基础</h2><p>介绍Git基础知识和基础命令。<br><a href="https://higoge.github.io/2015/07/03/git-basic01/">Git基础01</a><br><a href="https://higoge.github.io/2015/07/03/git-basic02/">Git基础02</a><br><a href="https://higoge.github.io/2015/07/03/git-basic03/">Git基础03</a><br><a href="https://higoge.github.io/2015/07/03/git-basic04/">Git基础04</a><br><a href="https://higoge.github.io/2015/07/07/git-basic05/">Git基础05：Git版本控制的最佳实践</a><br><a href="https://higoge.github.io/2015/07/07/git-basic06/">Git基础06：介绍一个成功的 Git 分支模型</a></p><h2 id="Git远程"><a href="#Git远程" class="headerlink" title="Git远程"></a>Git远程</h2><p>介绍Git远程操作和服务搭建。<br><a href="https://higoge.github.io/2015/07/06/git-remote01/">Git远程01：git remote相关操作</a><br><a href="https://higoge.github.io/2015/07/06/git-remote02/">Git远程02：git clone都做了什么</a><br><a href="https://higoge.github.io/2015/07/06/git-remote03/">Git远程03：分支的upstream</a><br><a href="https://higoge.github.io/2015/07/06/git-remote04/">Git远程04：git fetch &amp; git push &amp; git pull</a><br><a href="https://higoge.github.io/2015/07/07/git-remote05/">Git远程05：远程分支的删除与同步</a><br><a href="https://higoge.github.io/2015/07/07/git-remote06/">Git远程06：push.default设置</a><br><a href="https://higoge.github.io/2015/07/07/git-remote07/">Git远程07：远程标签</a><br><a href="https://higoge.github.io/2015/07/07/git-remote08/">Git远程08：关于Git远程仓库操作的一些经验</a><br><a href="https://higoge.github.io/2015/08/05/git-remote09/">Git远程09：Git服务搭建</a><br><a href="https://higoge.github.io/2015/08/06/git-remote10/">Git远程10：搭建私有GitLab</a></p><h2 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h2><p>介绍VMware Workstation的操作。<br><a href="https://higoge.github.io/2015/06/24/vm01/">虚拟机01：虚拟机的安装</a><br><a href="https://higoge.github.io/2015/06/24/vm02/">虚拟机02：三种网络模式</a><br><a href="https://higoge.github.io/2015/06/25/vm03/">虚拟机03：网络设置</a><br><a href="https://higoge.github.io/2015/06/25/vm04/">虚拟机04：新建虚拟机-Win7</a><br><a href="https://higoge.github.io/2015/06/26/vm05/">虚拟机05：Win7中安装VMware-Tools</a><br><a href="https://higoge.github.io/2015/06/26/vm06/">虚拟机06：快照与克隆</a><br><a href="https://higoge.github.io/2015/06/29/vm07/">虚拟机07：常用快捷键</a><br><a href="https://higoge.github.io/2015/06/29/vm08/">虚拟机08：通过网卡共享上网</a><br><a href="https://higoge.github.io/2015/06/30/vm09/">虚拟机09：添加永久磁盘</a><br><a href="https://higoge.github.io/2015/06/30/vm10/">虚拟机10：使用U盘及U盘启动</a><br><a href="https://higoge.github.io/2015/07/01/vm11/">虚拟机11：共享文件夹</a><br><a href="https://higoge.github.io/2015/07/01/vm12/">虚拟机12：其他功能</a></p><h2 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h2><p>介绍存储相关知识。<br><a href="https://higoge.github.io/2015/06/23/openfiler01/">Openfiler01：Openfiler的安装</a><br><a href="https://higoge.github.io/2015/06/23/openfiler02/">Openfiler02：Openfiler的配置</a><br><a href="https://higoge.github.io/2015/06/23/openfiler03/">Openfiler03：open-iscsi安装配置及smbclient的安装</a></p><p>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;博客文章越来越多，分类和标签已经不能满足快速搜索的要求，将所有的文章列一个目录置顶，直接在本文搜索可以大大提高效率。&lt;br&gt;据目测，本文将会很长很长，而且会一直变长。&lt;br&gt;如果本博客对你有所帮助，请&lt;a href=&quot;https://higoge.github.io/about/&quot;&gt;小额赞助&lt;/a&gt;。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux进阶16：Linux下Oracle静默安装及配置</title>
    <link href="http://higoge.github.io/2018/05/05/ad-linux16/"/>
    <id>http://higoge.github.io/2018/05/05/ad-linux16/</id>
    <published>2018-05-05T07:46:35.000Z</published>
    <updated>2018-05-13T12:42:48.324Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍CentOS6.9下Oracle 11gr2的静默安装。</p><a id="more"></a><h3 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h3><ul><li>内存：1G，推荐2G。</li><li>Swap空间：内存的1至1.5倍。</li><li>磁盘空间：<code>/tmp</code>至少1G，软件空间4.7G，数据空间1.7G。</li></ul><p>本文CentOS6.9采用最小化(Minimal)的方式安装，2个物理CPU，每个2线程，2G内存，60G硬盘，2G的Swap，30G的<code>/</code>目录，28G的<code>/home</code>目录</p><h3 id="软件包安装"><a href="#软件包安装" class="headerlink" title="软件包安装"></a>软件包安装</h3><p>配置Yum源，可以参考<a href="https://higoge.github.io/2017/03/05/ad-linux09/">Linux进阶09：CentOS的Yum库设置</a>。<br>安装软件包。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install binutils compat-libcap1 compat-libstdc++-33 \</span><br><span class="line">    gcc gcc-c++ glibc glibc glibc-devel glibc-devel ksh libgcc \</span><br><span class="line">    libstdc++ libstdc++-devel libaio libaio-devel make sysstat unzip -y</span><br></pre></td></tr></table></figure></p><h3 id="新建用户和组"><a href="#新建用户和组" class="headerlink" title="新建用户和组"></a>新建用户和组</h3><p>新建组<code>oinstall</code>和<code>dba</code>，以及<code>oracle</code>用户。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo groupadd oinstall</span><br><span class="line">$ sudo groupadd dba</span><br><span class="line">$ sudo useradd -g oinstall -G dba oracle</span><br><span class="line">$ sudo passwd oracle</span><br></pre></td></tr></table></figure></p><h3 id="修改内核参数"><a href="#修改内核参数" class="headerlink" title="修改内核参数"></a>修改内核参数</h3><p><code>/etc/sysctl.conf</code>最后一行添加如下内容。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kernel.shmmni = 4096</span><br><span class="line">kernel.sem = 250 32000 100 128</span><br><span class="line">net.ipv4.ip_local_port_range = 9000 65500</span><br><span class="line">net.core.rmem_default = 262144</span><br><span class="line">net.core.rmem_max = 4194304</span><br><span class="line">net.core.wmem_default = 262144</span><br><span class="line">net.core.wmem_max = 1048576</span><br></pre></td></tr></table></figure></p><p>执行<code>sudo sysctl -p</code>使内核参数生效。</p><h3 id="调整会话限制"><a href="#调整会话限制" class="headerlink" title="调整会话限制"></a>调整会话限制</h3><p><code>/etc/pam.d/login</code>最后一行添加如下内容。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session    required     pam_limits.so</span><br></pre></td></tr></table></figure></p><h3 id="限制设置"><a href="#限制设置" class="headerlink" title="限制设置"></a>限制设置</h3><p><code>/etc/security/limits.conf</code>最后一行添加如下内容。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">oracle        soft    nproc    8192</span><br><span class="line">oracle        hard    nproc    16384</span><br><span class="line">oracle        soft    nofile   32768</span><br><span class="line">oracle        hard    nofile   65536</span><br></pre></td></tr></table></figure></p><h3 id="添加IP地址到host"><a href="#添加IP地址到host" class="headerlink" title="添加IP地址到host"></a>添加IP地址到host</h3><p>在<code>/etc/hosts</code>中明确添加域名与本机IP地址的映射。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># hostname</span><br><span class="line">CentOS6</span><br><span class="line"># vi /etc/hosts</span><br><span class="line">192.168.80.6 CentOS6</span><br></pre></td></tr></table></figure></p><h3 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a>新建文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/oraInst.loc</span><br><span class="line">inventory_loc=/home/oracle/oracle/oraInventory</span><br><span class="line">inst_group=oinstall</span><br></pre></td></tr></table></figure><h3 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h3><p>切换到<code>oracle</code>用户，本步骤后所有操作均为<code>oracle</code>用户。<br>新建oracle文件夹，作为软件安装目录。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ su - oracle</span><br><span class="line">$ mkdir oracle</span><br></pre></td></tr></table></figure></p><p>修改环境变量，并生效。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ vi ~/.bash_profile</span><br><span class="line">export PATH=$PATH:/home/oracle/oracle/product/11gr2/dbhome_1/bin</span><br><span class="line">export ORACLE_HOME=/home/oracle/oracle/product/11gr2/dbhome_1</span><br><span class="line">export ORACLE_SID=higoge</span><br><span class="line">export ORACLE_UNQNAME=$ORACLE_SID</span><br><span class="line">$ source ~/.bash_profile</span><br></pre></td></tr></table></figure></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>下载<a href="http://download.oracle.com/otn/linux/oracle11g/R2/linux.x64_11gR2_database_1of2.zip" target="_blank" rel="noopener">linux.x64_11gR2_database_1of2.zip</a>以及<a href="http://download.oracle.com/otn/linux/oracle11g/R2/linux.x64_11gR2_database_2of2.zip" target="_blank" rel="noopener">linux.x64_11gR2_database_2of2.zip</a>，并进行解压和安装(将下载地址复制到迅雷后即可下载，无需登录，下载后改名即可)。本文解压到<code>/home/oracle/backup</code>目录下。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/backup</span><br><span class="line">$ unzip linux.x64_11gR2_database_1of2.zip</span><br><span class="line">$ unzip linux.x64_11gR2_database_2of2.zip</span><br><span class="line">$ <span class="built_in">cd</span> database</span><br><span class="line">$ ./runInstaller -silent -debug -force -ignorePrereq \</span><br><span class="line">DECLINE_SECURITY_UPDATES=<span class="literal">true</span> \</span><br><span class="line">oracle.install.option=INSTALL_DB_SWONLY \</span><br><span class="line">UNIX_GROUP_NAME=oinstall \</span><br><span class="line">INVENTORY_LOCATION=/home/oracle/oracle/oraInventory \</span><br><span class="line">ORACLE_HOME=/home/oracle/oracle/product/11gr2/dbhome_1 \</span><br><span class="line">ORACLE_BASE=/home/oracle/oracle \</span><br><span class="line">oracle.install.db.InstallEdition=EE \</span><br><span class="line">oracle.install.db.EEOptionsSelection=<span class="literal">true</span> \</span><br><span class="line">oracle.install.db.optionalComponents=oracle.rdbms.partitioning:11.2.0.3.0,oracle.oraolap:11.2.0.3.0,oracle.rdbms.dm:11.2.0.3.0,oracle.rdbms.lbac:11.2.0.3.0,oracle.rdbms.rat:11.2.0.3.0 \</span><br><span class="line">oracle.install.db.DBA_GROUP=dba \</span><br><span class="line">oracle.install.db.OPER_GROUP=dba \</span><br><span class="line">oracle.install.db.isRACOneInstall=<span class="literal">false</span></span><br></pre></td></tr></table></figure></p><p>执行到<code>[OUISetupDriver.JobExecutorThread] [ 2018-05-08 01:32:36.271 CST ] [UnixSystem.getCSSConfigType:2387]  configType=null</code>会出现假死状态，请继续等待，建议新起一个窗口使用<code>top</code>命令监控下。<br>出现以下信息表示成功。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">The following configuration scripts need to be executed as the <span class="string">"root"</span> user.</span><br><span class="line"> <span class="comment">#!/bin/sh</span></span><br><span class="line"> <span class="comment">#Root scripts to run</span></span><br><span class="line"></span><br><span class="line">/home/oracle/oracle/product/11gr2/dbhome_1/root.sh</span><br><span class="line">To execute the configuration scripts:</span><br><span class="line">         1. Open a terminal window</span><br><span class="line">         2. Log <span class="keyword">in</span> as <span class="string">"root"</span></span><br><span class="line">         3. Run the scripts</span><br><span class="line">         4. Return to this window and hit <span class="string">"Enter"</span> key to <span class="built_in">continue</span></span><br><span class="line"></span><br><span class="line">Successfully Setup Software.</span><br></pre></td></tr></table></figure></p><p><code>root</code>用户执行如下脚本，或直接使用<code>sudo</code>执行。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /home/oracle/oracle/product/11gr2/dbhome_1/root.sh</span><br></pre></td></tr></table></figure></p><h3 id="启动监听"><a href="#启动监听" class="headerlink" title="启动监听"></a>启动监听</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ netca /silent /responsefile /home/oracle/backup/database/response/netca.rsp</span><br></pre></td></tr></table></figure><p>报错，<code>Listener start failed.</code>以及<code>The exit code is 1</code>。<br>此时会生成<code>listener.ora</code>，对此文件进行编辑，修改为本机IP地址。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vi /home/oracle/oracle/product/11gr2/dbhome_1/network/admin/listener.ora</span><br><span class="line">      (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.80.6)(PORT = 1521))</span><br></pre></td></tr></table></figure></p><p>再次运行，成功。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ netca /silent /responsefile /home/oracle/backup/database/response/netca.rsp</span><br></pre></td></tr></table></figure></p><p>会有<code>Oracle Net Services configuration successful. The exit code is 0</code>字样。<br>启动服务，并查看状态。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ lsnrctl start</span><br><span class="line">$ lsnrctl status</span><br></pre></td></tr></table></figure></p><p>启动端口是<code>1521</code>。</p><h3 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cp ~/backup/database/response/dbca.rsp ~</span><br><span class="line">vi ~/dbca.rsp</span><br><span class="line">GDBNAME = <span class="string">"higoge.CentOS6"</span> <span class="comment"># 全局数据库的名字=SID+主机域名</span></span><br><span class="line">SID=<span class="string">"higoge"</span> <span class="comment"># SID</span></span><br><span class="line">CHARACTERSET=<span class="string">"AL32UTF8"</span> <span class="comment"># 编码</span></span><br><span class="line">NATIONALCHARACTERSET=<span class="string">"UTF8"</span> <span class="comment"># 编码</span></span><br><span class="line">SYSPASSWORD = <span class="string">"LearnIT"</span>    <span class="comment"># 密码</span></span><br><span class="line">SYSTEMPASSWORD = <span class="string">"LearnIT"</span>  <span class="comment"># 密码</span></span><br></pre></td></tr></table></figure><p>静默安装数据库。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$ dbca -silent -responseFile ~/dbca.rsp</span><br><span class="line">Copying database files</span><br><span class="line">1% complete</span><br><span class="line">3% complete</span><br><span class="line">11% complete</span><br><span class="line">18% complete</span><br><span class="line">26% complete</span><br><span class="line">37% complete</span><br><span class="line">Creating and starting Oracle instance</span><br><span class="line">40% complete</span><br><span class="line">45% complete</span><br><span class="line">50% complete</span><br><span class="line">55% complete</span><br><span class="line">56% complete</span><br><span class="line">60% complete</span><br><span class="line">62% complete</span><br><span class="line">Completing Database Creation</span><br><span class="line">66% complete</span><br><span class="line">70% complete</span><br><span class="line">73% complete</span><br><span class="line">85% complete</span><br><span class="line">96% complete</span><br><span class="line">100% complete</span><br><span class="line">Look at the <span class="built_in">log</span> file <span class="string">"/home/oracle/oracle/cfgtoollogs/dbca/higoge/higoge.log"</span> <span class="keyword">for</span> further details.</span><br></pre></td></tr></table></figure></p><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ sqlplus /nolog</span><br><span class="line">SQL&gt; conn / as sysdba</span><br><span class="line">SQL&gt; startup</span><br><span class="line">...</span><br><span class="line">Database mounted.</span><br><span class="line">Database opened.</span><br><span class="line"></span><br><span class="line">SQL&gt; create user jeremy identified by learnit default tablespace USERS temporary tablespace TEMP profile DEFAULT;</span><br><span class="line">SQL&gt; grant connect to jeremy;</span><br><span class="line">SQL&gt; grant resource to jeremy;</span><br><span class="line">SQL&gt; grant create any procedure to jeremy;</span><br><span class="line">SQL&gt; grant create any view to jeremy;</span><br><span class="line">SQL&gt; grant debug connect session to jeremy;</span><br><span class="line">SQL&gt; grant unlimited tablespace to jeremy;</span><br></pre></td></tr></table></figure><p>说明：创建用户<code>jeremy</code>，密码<code>learnit</code>，默认表空间<code>USERS</code>，临时表空间<code>TEMP</code>，概要文件<code>DEFAULT</code>。角色权限为<code>connect</code>和<code>resource</code>。系统权限为<code>create any procedure</code>，<code>create any view</code>，<code>debug connect session</code>，<code>unlimited tablespace</code>。</p><h3 id="远程登录"><a href="#远程登录" class="headerlink" title="远程登录"></a>远程登录</h3><p>使用PL/SQL，登录数据库为<code>(description=(address=(protocol=tcp)(host=192.168.80.6)(port=1521))(connect_data=(sid=higoge)))</code>，连接为<code>Normal</code>。<br>使用Navicat Premium，登录SID为<code>higoge</code>，其他信息输入即可。</p><h3 id="自启动服务"><a href="#自启动服务" class="headerlink" title="自启动服务"></a>自启动服务</h3><p>每次服务器重启后，都需要手动执行<code>lsnrctl start</code>以及使用<code>sqlplus</code>连接数据库后，执行<code>startup</code>，可以编写自启动脚本，加入到系统<code>service</code>中。<br><code>/etc/oratab</code>中，<code>higoge:/home/oracle/oracle/product/11gr2/dbhome_1:N</code>改为<code>higoge:/home/oracle/oracle/product/11gr2/dbhome_1:Y</code>。<br><code>/home/oracle/oracle/product/11gr2/dbhome_1/bin/</code>下的<code>dbstart</code>和<code>dbshut</code>中，<code>ORACLE_HOME_LISTNER=$1</code>改为<code>$ORACLE_HOME</code>。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ORACLE_HOME_LISTNER=$1</span></span><br><span class="line">ORACLE_HOME_LISTNER=<span class="variable">$ORACLE_HOME</span></span><br></pre></td></tr></table></figure></p><p><code>root</code>用户新建<code>/etc/init.d/oracledb</code>文件，内容如下。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># chkconfig: 345 10 90</span></span><br><span class="line"><span class="comment"># description: Oracle auto start-stop script. Edit by higoge.</span></span><br><span class="line"><span class="comment"># /etc/init.d/oracledb</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="built_in">export</span> ORACLE_HOME=/home/oracle/oracle/product/11gr2/dbhome_1/</span><br><span class="line"><span class="built_in">export</span> ORACLE_SID=higoge</span><br><span class="line"><span class="built_in">export</span> ORACLE_UNQNAME=<span class="variable">$ORACLE_SID</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ORACLE_HOME</span>/bin</span><br><span class="line">ORA_OWNR=oracle</span><br><span class="line"></span><br><span class="line"><span class="comment"># if the executables do not exist -- display error</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="variable">$ORACLE_HOME</span>/bin/dbstart -o ! -d <span class="variable">$ORACLE_HOME</span> ]</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Oracle startup: cannot start"</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># depending on parameter -- startup, shutdown, restart</span></span><br><span class="line"><span class="comment"># of the instance and listener or usage display</span></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">start)</span><br><span class="line">  <span class="comment"># Oracle listener and instance startup</span></span><br><span class="line">  <span class="built_in">echo</span> -n <span class="string">"Starting Oracle: "</span></span><br><span class="line">  su <span class="variable">$ORA_OWNR</span> -c <span class="string">"<span class="variable">$ORACLE_HOME</span>/bin/dbstart"</span></span><br><span class="line">  su <span class="variable">$ORA_OWNR</span> -c <span class="string">"<span class="variable">$ORACLE_HOME</span>/bin/lsnrctl start"</span></span><br><span class="line">  touch /var/lock/oracle</span><br><span class="line">  su <span class="variable">$ORA_OWNR</span> -c <span class="variable">$ORACLE_HOME</span>/bin/emctl start dbconsole</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"OK"</span></span><br><span class="line">;;</span><br><span class="line">stop)</span><br><span class="line">  <span class="comment"># Oracle listener and instance shutdown</span></span><br><span class="line">  <span class="built_in">echo</span> -n <span class="string">"Shutdown Oracle: "</span></span><br><span class="line">  su <span class="variable">$ORA_OWNR</span> -c <span class="string">"<span class="variable">$ORACLE_HOME</span>/bin/lsnrctl stop"</span></span><br><span class="line">  su <span class="variable">$ORA_OWNR</span> -c <span class="variable">$ORACLE_HOME</span>/bin/dbshut</span><br><span class="line">  rm -f /var/lock/oracle</span><br><span class="line">  su <span class="variable">$ORA_OWNR</span> -c <span class="variable">$ORACLE_HOME</span>/bin/emctl stop dbconsole</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"OK"</span></span><br><span class="line">;;</span><br><span class="line">reload|restart)</span><br><span class="line">  <span class="variable">$0</span> stop</span><br><span class="line">  <span class="variable">$0</span> start</span><br><span class="line">;;</span><br><span class="line">****)</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Usage: service oracledb start|stop|restart|reload"</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure></p><p>配置权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chmod 755 /etc/init.d/oracledb</span><br><span class="line">$ sudo chkconfig oracledb on</span><br></pre></td></tr></table></figure></p><p>重启服务器验证即可。</p><p>如果本文对你有所帮助，请<a href="http://higoge.github.io/about/">小额赞助</a>。<br>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍CentOS6.9下Oracle 11gr2的静默安装。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux进阶" scheme="http://higoge.github.io/categories/Linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Linux" scheme="http://higoge.github.io/tags/Linux/"/>
    
      <category term="Oracle" scheme="http://higoge.github.io/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Linux进阶15：Linux下MySQL数据库安装及配置</title>
    <link href="http://higoge.github.io/2018/01/28/ad-linux15/"/>
    <id>http://higoge.github.io/2018/01/28/ad-linux15/</id>
    <published>2018-01-28T07:46:35.000Z</published>
    <updated>2018-05-13T12:31:48.633Z</updated>
    
    <content type="html"><![CDATA[<p>本文以CentOS6.9为例，介绍MySQL数据库的基本安装和配置，最后达到可以远程访问数据库及建库建表的目的。</p><a id="more"></a><h2 id="安装及启动"><a href="#安装及启动" class="headerlink" title="安装及启动"></a>安装及启动</h2><p>安装命令如下。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install mysql mysql-server</span><br></pre></td></tr></table></figure></p><p>启动命令如下。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service mysqld start</span><br><span class="line">Initializing MySQL database:  Installing MySQL system tables...</span><br><span class="line">OK</span><br><span class="line">Filling <span class="built_in">help</span> tables...</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">To start mysqld at boot time you have to copy</span><br><span class="line">support-files/mysql.server to the right place <span class="keyword">for</span> your system</span><br><span class="line"></span><br><span class="line">PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !</span><br><span class="line">To <span class="keyword">do</span> so, start the server, <span class="keyword">then</span> issue the following commands:</span><br><span class="line"></span><br><span class="line">/usr/bin/mysqladmin -u root password <span class="string">'new-password'</span></span><br><span class="line">/usr/bin/mysqladmin -u root -h demo password <span class="string">'new-password'</span></span><br><span class="line"></span><br><span class="line">Alternatively you can run:</span><br><span class="line">/usr/bin/mysql_secure_installation</span><br><span class="line"></span><br><span class="line"><span class="built_in">which</span> will also give you the option of removing the <span class="built_in">test</span></span><br><span class="line">databases and anonymous user created by default.  This is</span><br><span class="line">strongly recommended <span class="keyword">for</span> production servers.</span><br><span class="line"></span><br><span class="line">See the manual <span class="keyword">for</span> more instructions.</span><br><span class="line"></span><br><span class="line">You can start the MySQL daemon with:</span><br><span class="line"><span class="built_in">cd</span> /usr ; /usr/bin/mysqld_safe &amp;</span><br><span class="line"></span><br><span class="line">You can <span class="built_in">test</span> the MySQL daemon with mysql-test-run.pl</span><br><span class="line"><span class="built_in">cd</span> /usr/mysql-test ; perl mysql-test-run.pl</span><br><span class="line"></span><br><span class="line">Please report any problems with the /usr/bin/mysqlbug script!</span><br><span class="line"></span><br><span class="line">                                                           [  OK  ]</span><br><span class="line">Starting mysqld:                                           [  OK  ]</span><br></pre></td></tr></table></figure></p><p>自启动配置如下。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chkconfig mysqld on</span><br><span class="line">$ sudo chkconfig --list mysqld</span><br><span class="line">mysqld          0:off   1:off   2:on    3:on    4:on    5:on    6:off</span><br></pre></td></tr></table></figure></p><h2 id="配置root密码"><a href="#配置root密码" class="headerlink" title="配置root密码"></a>配置root密码</h2><p>有多种方式配置root用户的密码，从上面的第一次启动MySQL服务的信息看，推荐使用<code>mysql_secure_installation</code>配置密码、禁用匿名用户以及删除<code>test</code>数据库。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">$ mysql_secure_installation</span><br><span class="line"></span><br><span class="line">NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MySQL</span><br><span class="line">      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">In order to <span class="built_in">log</span> into MySQL to secure it, we<span class="string">'ll need the current</span></span><br><span class="line"><span class="string">password for the root user.  If you'</span>ve just installed MySQL, and</span><br><span class="line">you haven<span class="string">'t set the root password yet, the password will be blank,</span></span><br><span class="line"><span class="string">so you should just press enter here.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Enter current password for root (enter for none):</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">OK, successfully used password, moving on...</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Setting the root password ensures that nobody can log into the MySQL</span></span><br><span class="line"><span class="string">root user without the proper authorisation.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Set root password? [Y/n] y</span></span><br><span class="line"><span class="string">New password:</span></span><br><span class="line"><span class="string">Re-enter new password:</span></span><br><span class="line"><span class="string">Password updated successfully!</span></span><br><span class="line"><span class="string">Reloading privilege tables..</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">By default, a MySQL installation has an anonymous user, allowing anyone</span></span><br><span class="line"><span class="string">to log into MySQL without having to have a user account created for</span></span><br><span class="line"><span class="string">them.  This is intended only for testing, and to make the installation</span></span><br><span class="line"><span class="string">go a bit smoother.  You should remove them before moving into a</span></span><br><span class="line"><span class="string">production environment.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Remove anonymous users? [Y/n] y</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Normally, root should only be allowed to connect from '</span>localhost<span class="string">'.  This</span></span><br><span class="line"><span class="string">ensures that someone cannot guess at the root password from the network.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Disallow root login remotely? [Y/n] y</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">By default, MySQL comes with a database named '</span><span class="built_in">test</span><span class="string">' that anyone can</span></span><br><span class="line"><span class="string">access.  This is also intended only for testing, and should be removed</span></span><br><span class="line"><span class="string">before moving into a production environment.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Remove test database and access to it? [Y/n] y</span></span><br><span class="line"><span class="string"> - Dropping test database...</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"> - Removing privileges on test database...</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Reloading the privilege tables will ensure that all changes made so far</span></span><br><span class="line"><span class="string">will take effect immediately.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Reload privilege tables now? [Y/n] y</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Cleaning up...</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">All done!  If you'</span>ve completed all of the above steps, your MySQL</span><br><span class="line">installation should now be secure.</span><br><span class="line"></span><br><span class="line">Thanks <span class="keyword">for</span> using MySQL!</span><br></pre></td></tr></table></figure></p><p>以上操作主要包含以下内容。<br>(1) <code>Enter current password for root (enter for none):</code>，输入root用户密码，第一次设置直接输入回车。<br>(2) <code>Set root password? [Y/n]</code>，设置root用户密码。<br>(3) <code>Remove anonymous users? [Y/n]</code>，删除匿名用户。<br>(4) <code>Disallow root login remotely? [Y/n]</code>，禁用root远程登录。<br>(5) <code>Remove test database and access to it? [Y/n]</code>, 删除<code>test</code>数据库和访问权限。<br>(6) <code>Reload privilege tables now? [Y/n]</code>，重新加载表权限。</p><h2 id="登录及退出MySQL"><a href="#登录及退出MySQL" class="headerlink" title="登录及退出MySQL"></a>登录及退出MySQL</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root -p</span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 10</span><br><span class="line">Server version: 5.1.73 Source distribution</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; quit</span><br><span class="line">Bye</span><br></pre></td></tr></table></figure><h2 id="新建用户及配置权限"><a href="#新建用户及配置权限" class="headerlink" title="新建用户及配置权限"></a>新建用户及配置权限</h2><p>新建learnit用户，可以从任意ip登录(<code>&#39;learnit&#39;@&#39;%&#39;</code>)，访问任意库表(<code>*.*</code>)，密码123456，开通全部权限(<code>ALL PRIVILEGES</code>)。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO <span class="string">'learnit'</span>@<span class="string">'%'</span></span><br><span class="line">    -&gt; IDENTIFIED BY <span class="string">'123456'</span> WITH GRANT OPTION;</span><br></pre></td></tr></table></figure></p><p>测试远程连接MySQL。其中<code>-h</code>参数在非本机访问时使用。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u learnit -h 192.168.80.6 -p</span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 17</span><br><span class="line">Server version: 5.1.73 Source distribution</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure></p><h2 id="字符集设置"><a href="#字符集设置" class="headerlink" title="字符集设置"></a>字符集设置</h2><p>MySQL默认字符集是<code>latin1</code>，中文会出乱码，需要修改为<code>utf8</code>。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SHOW VARIABLES LIKE <span class="string">'character%'</span>;</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| Variable_name            | Value                      |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| character_set_client     | latin1                     |</span><br><span class="line">| character_set_connection | latin1                     |</span><br><span class="line">| character_set_database   | latin1                     |</span><br><span class="line">| character_set_filesystem | binary                     |</span><br><span class="line">| character_set_results    | latin1                     |</span><br><span class="line">| character_set_server     | latin1                     |</span><br><span class="line">| character_set_system     | utf8                       |</span><br><span class="line">| character_sets_dir       | /usr/share/mysql/charsets/ |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">8 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure></p><p>修改<code>/etc/my.cnf</code>。内容如下。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure></p><p>修改完成后重启服务。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service mysqld restart</span><br></pre></td></tr></table></figure></p><p>再次查看字符集，已成功改为<code>utf8</code>。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SHOW VARIABLES LIKE <span class="string">'character%'</span>;</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| Variable_name            | Value                      |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| character_set_client     | utf8                       |</span><br><span class="line">| character_set_connection | utf8                       |</span><br><span class="line">| character_set_database   | utf8                       |</span><br><span class="line">| character_set_filesystem | binary                     |</span><br><span class="line">| character_set_results    | utf8                       |</span><br><span class="line">| character_set_server     | utf8                       |</span><br><span class="line">| character_set_system     | utf8                       |</span><br><span class="line">| character_sets_dir       | /usr/share/mysql/charsets/ |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">8 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure></p><h2 id="CentOS7的MySQL数据库安装"><a href="#CentOS7的MySQL数据库安装" class="headerlink" title="CentOS7的MySQL数据库安装"></a>CentOS7的MySQL数据库安装</h2><p>Oracle收购了MySQL后，CentOS组织担心Oracle会对MySQL收费，故CentOS7放弃了MySQL，改用了MariaDB，无法直接通过Yum安装。通过增加MySQL Yum源的方式解决。</p><h3 id="获取MySQL-yum源"><a href="#获取MySQL-yum源" class="headerlink" title="获取MySQL yum源"></a>获取MySQL yum源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">$ sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br></pre></td></tr></table></figure><p>安装这个包后，会获得两个MySQL的yum repo源。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ls -1 /etc/yum.repos.d/mysql-community*</span><br><span class="line">/etc/yum.repos.d/mysql-community.repo</span><br><span class="line">/etc/yum.repos.d/mysql-community-source.repo</span><br></pre></td></tr></table></figure></p><h3 id="安装MySQL、启动服务和配置自启动"><a href="#安装MySQL、启动服务和配置自启动" class="headerlink" title="安装MySQL、启动服务和配置自启动"></a>安装MySQL、启动服务和配置自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install mysql-server</span><br><span class="line">$ sudo systemctl start mysqld</span><br><span class="line">$ sudo systemctl <span class="built_in">enable</span> mysqld</span><br></pre></td></tr></table></figure><p>如果报错，那么与mariadb-server有冲突，将其删除。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo rpm -e mariadb-server akonadi-mysql</span><br></pre></td></tr></table></figure></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>(1) 脚本注释<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 注释内容</span><br><span class="line"><span class="comment">--  注释内容</span></span><br><span class="line"><span class="comment">/* 注释内容 */</span></span><br></pre></td></tr></table></figure></p><p>(2) 竖排显示<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">table</span>\G</span><br></pre></td></tr></table></figure></p><p>(3) 显示当前使用的数据库<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">database</span>();</span><br></pre></td></tr></table></figure></p><p>如果本文对你有所帮助，请<a href="http://higoge.github.io/about/">小额赞助</a>。<br>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文以CentOS6.9为例，介绍MySQL数据库的基本安装和配置，最后达到可以远程访问数据库及建库建表的目的。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux进阶" scheme="http://higoge.github.io/categories/Linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Linux" scheme="http://higoge.github.io/tags/Linux/"/>
    
      <category term="MySQL" scheme="http://higoge.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Linux命令13：date与hwclock</title>
    <link href="http://higoge.github.io/2018/01/21/cm-linux13/"/>
    <id>http://higoge.github.io/2018/01/21/cm-linux13/</id>
    <published>2018-01-21T10:59:53.000Z</published>
    <updated>2018-02-01T08:34:45.929Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍Linux时钟设置。</p><a id="more"></a><h2 id="Linux的两个时间"><a href="#Linux的两个时间" class="headerlink" title="Linux的两个时间"></a>Linux的两个时间</h2><p>1) <strong>硬件时钟</strong>(Hardware Clock)：独立于CPU中运行的任何控制程序运行的时钟，即使在机器关机的情况下也是如此。可以简单理解为主板的时钟。<br>2) <strong>系统时间</strong>(System Time)：由Linux内核中的时钟保持的时间，系统启动时，读取硬件时钟到系统中，作为系统初始化时间，再由内核保持时间运行。</p><h2 id="date"><a href="#date" class="headerlink" title="date"></a>date</h2><p><code>date</code>命令用于显示和设置<strong>系统时间</strong>。<br>常用参数：<br><code>-s</code>：设置系统时间。<br><code>-u</code>：设置UTC时间。(UTC时间是世界标准时间或世界协调时间)。<br><code>-s</code>后面可以接时间字符串，常用的是<code>2018-01-21 18:00:00</code>或者只写时间<code>18:00:00</code>，还有更多可以识别的字符串，具体可以参考<code>info date</code>中的<code>Date input formats</code>章节。</p><h2 id="hwclock"><a href="#hwclock" class="headerlink" title="hwclock"></a>hwclock</h2><p><code>hwclock</code>命令用于显示和设置<strong>硬件时钟</strong>。所有操作需<code>root</code>权限。<br>常用参数：<br><code>--set</code>：设置时间，后面字符串与<code>date -s</code>的字符串相同。<br><code>-s, --hctosys</code>：设置系统时间与硬件时钟相同。<br><code>-w, --systohc</code>：是指硬件时钟与系统时间相同。</p><h2 id="NTP对时设置硬件时钟"><a href="#NTP对时设置硬件时钟" class="headerlink" title="NTP对时设置硬件时钟"></a>NTP对时设置硬件时钟</h2><p><a href="https://higoge.coding.me/2018/01/14/ad-linux14/" target="_blank" rel="noopener">Linux进阶14：NTP对时服务的配置及使用</a>中，NTP同步只同步了系统时间，没有修改硬件时钟。可以通过以下方式进行修改。<br>1) <a href="https://higoge.coding.me/2018/01/14/ad-linux14/#使用ntpdate" target="_blank" rel="noopener">使用ntpdate</a>进行同步时，<code>ntpdate</code>执行成功后，执行写入到硬件时钟。即，<code>crontab -e</code>中，修改如下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ntpdate 192.168.80.6 &amp;&gt;/dev/null &amp;&amp; hwclock –-systohc</span><br></pre></td></tr></table></figure></p><p>2) <a href="https://higoge.coding.me/2018/01/14/ad-linux14/#使用ntpd服务进行同步" target="_blank" rel="noopener">使用NTP服务</a>进行同步时，<code>/etc/sysconfig/ntpd</code>增加一行，内容如下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SYNC_HWCLOCK=yes</span><br></pre></td></tr></table></figure></p><p>如果本文对你有所帮助，请<a href="http://higoge.github.io/about/">小额赞助</a>。<br>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍Linux时钟设置。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux命令" scheme="http://higoge.github.io/categories/Linux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="Linux" scheme="http://higoge.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux进阶14：NTP对时服务的配置及使用</title>
    <link href="http://higoge.github.io/2018/01/14/ad-linux14/"/>
    <id>http://higoge.github.io/2018/01/14/ad-linux14/</id>
    <published>2018-01-14T11:01:24.000Z</published>
    <updated>2018-01-17T10:09:59.853Z</updated>
    
    <content type="html"><![CDATA[<p>本文以CentOS6.9为例，介绍NTP对时服务的配置及使用。</p><a id="more"></a><h2 id="NTP对时服务的配置"><a href="#NTP对时服务的配置" class="headerlink" title="NTP对时服务的配置"></a>NTP对时服务的配置</h2><h3 id="安装及配置自启动"><a href="#安装及配置自启动" class="headerlink" title="安装及配置自启动"></a>安装及配置自启动</h3><p>检查<code>ntpd</code>是否安装。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -q ntp</span></span><br><span class="line">ntp-4.2.6p5-10.el6.centos.2.x86_64</span><br></pre></td></tr></table></figure></p><p>如若没有安装，则执行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install ntp</span></span><br></pre></td></tr></table></figure></p><p>启动NTP服务及配置NTP服务自启动。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service ntpd start</span></span><br><span class="line"><span class="comment"># chkconfig ntpd on</span></span><br><span class="line"><span class="comment"># chkconfig --list ntpd</span></span><br><span class="line">ntpd            0:off   1:off   2:on    3:on    4:on    5:on    6:off</span><br></pre></td></tr></table></figure></p><h3 id="配置NTP服务"><a href="#配置NTP服务" class="headerlink" title="配置NTP服务"></a>配置NTP服务</h3><p>配置文件为<code>/etc/ntp.conf</code>。<br>下述的配置文件表示可以任意IP地址进行时间同步，不许做任何修改。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">restrict default kod nomodify notrap nopeer noquery</span><br></pre></td></tr></table></figure></p><p>可以单独限制某IP地址段，在配置文件的18行左右。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hosts on local network are less restricted.</span></span><br><span class="line">restrict 192.168.80.0 mask 255.255.255.0 nomodify notrap</span><br></pre></td></tr></table></figure></p><p><strong>重要</strong>：如若NTP服务不能连接外网，则需要单独修改<code>server</code>为本地地址<code>127.127.1.0</code>，同时注释掉其他地址，否则NTP服务一直处于连接外网的时间服务器的状态，无法进行同步。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Use public servers from the pool.ntp.org project.</span></span><br><span class="line"><span class="comment"># Please consider joining the pool (http://www.pool.ntp.org/join.html).</span></span><br><span class="line">server 127.127.1.0 iburst</span><br><span class="line"><span class="comment">#server 0.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 1.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 2.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 3.centos.pool.ntp.org iburst</span></span><br></pre></td></tr></table></figure></p><p>修改完成后，请重启服务。</p><h2 id="NTP客户端设置"><a href="#NTP客户端设置" class="headerlink" title="NTP客户端设置"></a>NTP客户端设置</h2><h3 id="使用ntpdate"><a href="#使用ntpdate" class="headerlink" title="使用ntpdate"></a>使用ntpdate</h3><p><code>ntpdate</code>命令用于手动同步NTP时间。可以添加<code>-d</code>开启<code>debug</code>模式。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ntpdate 192.168.80.6</span></span><br><span class="line">14 Jan 17:11:12 ntpdate[2268]: adjust time server 192.168.80.6 offset 0.042004 sec</span><br></pre></td></tr></table></figure></p><p>可以配置定时任务，进行时间同步，如下述的例子是每30分钟手动同步一次。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab -e</span></span><br></pre></td></tr></table></figure></p><p>输入如下。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/30 * * * * /usr/sbin/ntpdate 192.168.80.6 &amp;&gt;/dev/null</span><br></pre></td></tr></table></figure></p><p>解释如下。<br>*/30：表示分钟数，*表示任意时刻，/30表示每30分钟。<br>后面四个*：表示任意的小时、天、月、周。<br>/usr/sbin/ntpdate：<code>ntpdate</code>的绝对路径。<br>&amp;：后台执行。<br>>/dev/null：所有的输出都忽略。</p><h3 id="使用ntpd服务进行同步"><a href="#使用ntpd服务进行同步" class="headerlink" title="使用ntpd服务进行同步"></a>使用ntpd服务进行同步</h3><p>也可以使用<code>ntpd</code>进行对时，即使用NTP服务同步其他NTP服务。<br>修改<code>/etc/ntp.conf</code>的<code>Public servers</code>，同时，把其他的<code>server</code>注释掉。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Use public servers from the pool.ntp.org project.</span></span><br><span class="line"><span class="comment"># Please consider joining the pool (http://www.pool.ntp.org/join.html).</span></span><br><span class="line">server 192.168.80.6 prefer</span><br><span class="line"><span class="comment">#server 0.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 1.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 2.centos.pool.ntp.org iburst</span></span><br><span class="line"><span class="comment">#server 3.centos.pool.ntp.org iburst</span></span><br></pre></td></tr></table></figure></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="一个常见的错误"><a href="#一个常见的错误" class="headerlink" title="一个常见的错误"></a>一个常见的错误</h3><p>当NTP服务重启时，需要客户端需要几分钟的时间才能同步。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ntpdate 192.168.80.6</span></span><br><span class="line">14 Jan 17:10:03 ntpdate[2253]: no server suitable <span class="keyword">for</span> synchronization found</span><br></pre></td></tr></table></figure></p><h3 id="ntpstat"><a href="#ntpstat" class="headerlink" title="ntpstat"></a>ntpstat</h3><p><code>ntpstat</code>用于显示NTP服务的状态<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ntpstat</span></span><br><span class="line">synchronised to NTP server (115.28.122.198) at stratum 3</span><br><span class="line">   time correct to within 32 ms</span><br><span class="line">   polling server every 256 s</span><br></pre></td></tr></table></figure></p><h3 id="ntpq"><a href="#ntpq" class="headerlink" title="ntpq"></a>ntpq</h3><p><code>ntpq</code>用于NTP查询。常用参数是<code>-p</code>，用列表显示。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ntpq -p</span></span><br><span class="line">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class="line">==============================================================================</span><br><span class="line">+120.25.115.19   10.137.38.86     2 u  156  256  377   46.216    1.599   0.807</span><br><span class="line">+ntp4.itcomplian 5.103.128.88     3 u  256  256  377  323.386   -1.026  22.152</span><br><span class="line">*time6.aliyun.co 10.137.38.86     2 u   18  256  377    6.348    2.909   1.105</span><br><span class="line">-ntp7.flashdance 192.36.143.152   2 u  257  256  367  358.442   -5.552  31.094</span><br></pre></td></tr></table></figure></p><p>注意两个参数<code>when</code>和<code>poll</code>。<br><code>when</code>：上一次成功请求之后到现在的秒数。<br><code>poll</code>：本地和远程服务器多少时间进行一次同步，单位秒。<br>其他参数具体可参考<code>man</code>手册，和<a href="http://acooly.iteye.com/blog/1993484" target="_blank" rel="noopener">NTP服务及时间同步(CentOS6.x)</a>。</p><h3 id="Windows对时"><a href="#Windows对时" class="headerlink" title="Windows对时"></a>Windows对时</h3><p>Windows也可使用Linux自定义的NTP服务。<br>时间和日期==&gt;Internet时间==&gt;更改设置==&gt;修改服务器。<br><img src="https://raw.githubusercontent.com/higoge/image/master/adlinux/20.png" alt="NTP"></p><h3 id="几个常用的共用的NTP服务"><a href="#几个常用的共用的NTP服务" class="headerlink" title="几个常用的共用的NTP服务"></a>几个常用的共用的NTP服务</h3><p>可以配置到NTP配置的<code>public server</code>里。</p><ol><li><code>ntp.api.bz</code></li><li><code>time.windows.com</code></li></ol><p>如果本文对你有所帮助，请<a href="http://higoge.github.io/about/">小额赞助</a>。<br>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文以CentOS6.9为例，介绍NTP对时服务的配置及使用。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux进阶" scheme="http://higoge.github.io/categories/Linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Linux" scheme="http://higoge.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux命令12：locate与updatedb</title>
    <link href="http://higoge.github.io/2018/01/01/cm-linux12/"/>
    <id>http://higoge.github.io/2018/01/01/cm-linux12/</id>
    <published>2018-01-01T00:58:42.000Z</published>
    <updated>2018-02-01T08:43:10.657Z</updated>
    
    <content type="html"><![CDATA[<p>最常用的查找文件的命令<code>find</code>，但<code>find</code>是读盘搜索，效率较低。本文介绍<code>locate</code>，可以快速读取<code>mlocate</code>数据库文件，速度非常快。Windows的类似软件是<code>Everything</code>。</p><a id="more"></a><h2 id="updatedb"><a href="#updatedb" class="headerlink" title="updatedb"></a>updatedb</h2><p>在大多数发行版，如CentOS系统，<code>updatedb</code>每天执行一次，是一个<code>cron</code>的定时任务，即，每天不定时的更新，具体文件是如下。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cat /etc/cron.daily/mlocate</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">nodevs=$(awk <span class="string">'$1 == "nodev" &amp;&amp; $2 != "rootfs" &amp;&amp; $2 != "zfs" &#123; print $2 &#125;'</span> &lt; /proc/filesystems)</span><br><span class="line"></span><br><span class="line">renice +19 -p $$ &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">ionice -c2 -n7 -p $$ &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">/usr/bin/updatedb -f <span class="string">"<span class="variable">$nodevs</span>"</span></span><br></pre></td></tr></table></figure></p><p>当系统刚刚建立时，或者新增、删除文件时，<code>mlocate</code>的数据库文件并不能同步更新，需要使用<code>root</code>用户手动执行<code>updatedb</code>命令进行更新。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># updatedb</span></span><br></pre></td></tr></table></figure></p><h2 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h2><p>当<code>mlocate</code>文件建立是，则可以使用<code>locate</code>命令查找文件。</p><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><p><code>-b</code>：只匹配base name。<br><code>-e</code>：只显示存在的文件。<br><code>-i</code>：忽略大小写。<br><code>-r</code>：正则表达式</p><h3 id="肌肉训练"><a href="#肌肉训练" class="headerlink" title="肌肉训练"></a>肌肉训练</h3><p>1) 查找包含<code>passwd</code>的文件。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ locate passwd</span><br></pre></td></tr></table></figure></p><p>2) 精确查找名叫<code>passwd</code>的文件。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ locate -b <span class="string">'\passwd'</span></span><br></pre></td></tr></table></figure></p><p>3) 查找以<code>passwd</code>结尾的文件。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ locate <span class="string">'*passwd'</span></span><br></pre></td></tr></table></figure></p><p>如果本文对你有所帮助，请<a href="http://higoge.github.io/about/">小额赞助</a>。<br>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最常用的查找文件的命令&lt;code&gt;find&lt;/code&gt;，但&lt;code&gt;find&lt;/code&gt;是读盘搜索，效率较低。本文介绍&lt;code&gt;locate&lt;/code&gt;，可以快速读取&lt;code&gt;mlocate&lt;/code&gt;数据库文件，速度非常快。Windows的类似软件是&lt;code&gt;Everything&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux命令" scheme="http://higoge.github.io/categories/Linux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="Linux" scheme="http://higoge.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>狗急跳墙08：XX-Net IPv6设置</title>
    <link href="http://higoge.github.io/2017/11/25/breakwall08/"/>
    <id>http://higoge.github.io/2017/11/25/breakwall08/</id>
    <published>2017-11-25T08:15:05.000Z</published>
    <updated>2017-12-11T08:07:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>前一阵网络封锁的很厉害，导致XX-Net的IP持续搜索不到，失去了中转的通道。通过开启IPv6可以解决，并且由于IPv6使用人数较少，速度反而比之前更快。<br>本文介绍Windows 10的设置方式。XX-Net需要下载到最新版，当前稳定版是<code>3.8.3</code>。<br>关于Windows 10的版本，使用快捷键<code>Win+I</code>-&gt;系统-&gt;关于-&gt;Windows规格，进行查看。</p><a id="more"></a><p><img src="https://raw.githubusercontent.com/higoge/image/master/bw08/01.png" alt="01.png"></p><h3 id="家庭版"><a href="#家庭版" class="headerlink" title="家庭版"></a>家庭版</h3><p>开启管理员命令行，快捷键<code>Win+X</code>-&gt;<code>A</code>。输入如下命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netsh interface teredo set state enterpriseclient server=default</span><br><span class="line">netsh interface ipv6 reset</span><br></pre></td></tr></table></figure></p><p>重启，然后再次开启管理员命令行。输入如下命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh interface teredo set state server=teredo.remlab.net</span><br></pre></td></tr></table></figure></p><p>如若不成功，可以执行如下命令后，从第一个命令再次执行。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netsh interface Teredo set state disable</span><br><span class="line">netsh interface Teredo set state type=default</span><br></pre></td></tr></table></figure></p><p>最后进行测试。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ping -6 ipv6.test-ipv6.com</span><br><span class="line">netsh int teredo show state</span><br></pre></td></tr></table></figure></p><p>效果如图。<br><img src="https://raw.githubusercontent.com/higoge/image/master/bw08/02.png" alt="02.png"></p><h3 id="企业版-专业版"><a href="#企业版-专业版" class="headerlink" title="企业版/专业版"></a>企业版/专业版</h3><p>开启本地组策略编辑器，<code>Win+R</code>-&gt;<code>gpedit.msc</code>，计算机配置-&gt;管理模板-&gt;网络-&gt;TCPIP设置-&gt;IPv6转换技术<br>1) 6to4状态，改为<strong>已启用</strong>。<br>2) ISATAP状态，改为<strong>已启用</strong>。<br>3) Teredo默认限定，改为<strong>已启用</strong>。<br>4) Teredo状态，改为<strong>企业客户端</strong>。<br>5) Teredo服务器名称，改为<strong>teredo.remlab.net</strong>。<br><img src="https://raw.githubusercontent.com/higoge/image/master/bw08/03.png" alt="03.png"><br><img src="https://raw.githubusercontent.com/higoge/image/master/bw08/04.png" alt="04.png"></p><h3 id="可选用的teredo服务"><a href="#可选用的teredo服务" class="headerlink" title="可选用的teredo服务"></a>可选用的teredo服务</h3><p>如下服务可以进行替换，前提是能够<code>ping</code>通。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">teredo.remlab.net / teredo-debian.remlab.net (Germany)</span><br><span class="line">teredo.autotrans.consulintel.com (Spain)</span><br><span class="line">teredo.ipv6.microsoft.com (USA, Redmond) (default for WindowsXP/2003/Vista/2008 OS)</span><br><span class="line">teredo.ngix.ne.kr (South Korea)</span><br><span class="line">teredo.managemydedi.com (USA, Chicago)</span><br><span class="line">teredo.trex.fi (Finland)</span><br></pre></td></tr></table></figure></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>其他操作系统如何开启IPv6，请参考XX-Net的官方文档<a href="https://github.com/XX-net/XX-Net/wiki/%E5%A6%82%E4%BD%95%E5%BC%80%E5%90%AFIPv6" target="_blank" rel="noopener">如何开启IPv6</a></p><p>如果本文对你有所帮助，请<a href="http://higoge.github.io/about/">小额赞助</a>。<br>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前一阵网络封锁的很厉害，导致XX-Net的IP持续搜索不到，失去了中转的通道。通过开启IPv6可以解决，并且由于IPv6使用人数较少，速度反而比之前更快。&lt;br&gt;本文介绍Windows 10的设置方式。XX-Net需要下载到最新版，当前稳定版是&lt;code&gt;3.8.3&lt;/code&gt;。&lt;br&gt;关于Windows 10的版本，使用快捷键&lt;code&gt;Win+I&lt;/code&gt;-&amp;gt;系统-&amp;gt;关于-&amp;gt;Windows规格，进行查看。&lt;/p&gt;
    
    </summary>
    
      <category term="狗急跳墙" scheme="http://higoge.github.io/categories/%E7%8B%97%E6%80%A5%E8%B7%B3%E5%A2%99/"/>
    
    
      <category term="BreakWall" scheme="http://higoge.github.io/tags/BreakWall/"/>
    
      <category term="XX-Net" scheme="http://higoge.github.io/tags/XX-Net/"/>
    
  </entry>
  
  <entry>
    <title>大数据01：Hadoop环境搭建</title>
    <link href="http://higoge.github.io/2017/08/13/bd01/"/>
    <id>http://higoge.github.io/2017/08/13/bd01/</id>
    <published>2017-08-13T05:55:23.000Z</published>
    <updated>2017-12-11T08:07:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>本系列简要记录Hadoop相关的知识点及遇到的问题。<br><a id="more"></a></p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>到文章发表为止，Hadoop的主要分支是<code>2.7.X</code>和<code>2.8.X</code>，二者在基本配置没有任何差别，但实际测试中，<code>2.7</code>分支的最新版<code>2.7.4</code>出现了诸多莫名其妙的问题，如内存不够无法启动，<code>SSH</code>掉线等。所以使用<code>2.8.1</code>版本进行搭建。但请注意<code>2.8.1</code>的<code>Release Note</code>，不要用于商用版本。</p><blockquote><p>Please note that 2.8.x release line continues to be not yet ready for production use. Critical issues are being ironed out via testing and downstream adoption. Production users should wait for a subsequent release in the 2.8.x line.</p></blockquote><p>所有操作都在<code>Linux</code>上进行，所以需要有一定的<code>Linux</code>操作经验。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><table><thead><tr><th>Key</th><th>Value</th></tr></thead><tbody><tr><td>操作系统</td><td>CentOS6.9</td></tr><tr><td>安装方式</td><td>Minimal</td></tr><tr><td>CPU</td><td>1处理器 2内核</td></tr><tr><td>内存</td><td>1024M</td></tr><tr><td>硬盘</td><td>20GB</td></tr><tr><td>分区</td><td>Swap: 2G; /home: 20G; /: 18G</td></tr></tbody></table><h2 id="操作记录"><a href="#操作记录" class="headerlink" title="操作记录"></a>操作记录</h2><p>(1) 添加Hadoop用户并设置为sudoer.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># visudo</span></span><br></pre></td></tr></table></figure></p><p>去掉<code>%wheel ALL=(ALL) ALL</code>的<code>#</code>注释(98行)。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># useradd hadoop -G wheel</span></span><br><span class="line"><span class="comment"># passwd hadoop</span></span><br><span class="line"><span class="comment"># su hadoop -</span></span><br></pre></td></tr></table></figure></p><p>(2) 配置网络及防火墙<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/sysconfig/network-script/ifcfg-eth0</span><br></pre></td></tr></table></figure></p><p>其中<code>ONBOOT</code>修改为<code>yes</code>，<code>BOOTPROTO</code>修改为<code>none</code>，<code>ARPCHECK</code>及网络相关的内容，为新增内容。内容参考如下。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=eth0</span><br><span class="line">HWADDR=00:0C:29:EC:04:2B</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">UUID=f6cd105c-e861-46dd-9f74-c9194fcce20b</span><br><span class="line">ONBOOT=yes</span><br><span class="line">NM_CONTROLLED=yes</span><br><span class="line">ARPCHECK=no</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">IPADDR=192.168.80.30</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.80.1</span><br><span class="line">DNS1=192.168.80.1</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/sysconfig/network</span><br></pre></td></tr></table></figure><p>修改域名为<code>NN</code>。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HOSTNAME=NN</span><br></pre></td></tr></table></figure></p><p>关闭防火墙。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chkconfig iptables off</span><br></pre></td></tr></table></figure></p><p>重启。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo reboot</span><br></pre></td></tr></table></figure></p><p>(3) SSH配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir .ssh</span><br><span class="line">$ <span class="built_in">echo</span> [publick_key] &gt;&gt; .ssh/authorized_keys</span><br><span class="line">$ chmod 700 .ssh</span><br><span class="line">$ chmod 600 .ssh/authorized_keys</span><br></pre></td></tr></table></figure></p><p><code>publick_key</code>修改为客户端(如Windows)的共有key的内容。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/sysconfig/ssh/sshd_config</span><br></pre></td></tr></table></figure></p><p>修改如下内容。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UseDNS no</span><br><span class="line">GSSAPIAuthentication no</span><br><span class="line">MaxStartups 100</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service sshd restart</span><br></pre></td></tr></table></figure><p>(4) Yum源配置<br>使用本地CDROM作为Yum源。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo rm -rf /etc/yum.repos.d/*</span><br><span class="line">$ sudo vi /etc/yum.repos.d/cdrom.repo</span><br></pre></td></tr></table></figure></p><p>内容如下。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[cdrom]</span><br><span class="line">name=cdrom</span><br><span class="line">baseurl=file:///media/</span><br><span class="line"><span class="built_in">enable</span>=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mount /dev/cdrom /media</span><br></pre></td></tr></table></figure><p>也可以用iso文件进行挂载。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mount -o loop [.iso] /mdeia</span><br></pre></td></tr></table></figure></p><p>重建Yum缓存。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum clean all &amp;&amp; sudo yum makecache</span><br></pre></td></tr></table></figure></p><p>(5) 安装SSH客户端<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install -y openssh-clients</span><br></pre></td></tr></table></figure></p><p>如果本文对你有所帮助，请<a href="http://higoge.github.io/about/">小额赞助</a>。<br>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本系列简要记录Hadoop相关的知识点及遇到的问题。&lt;br&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://higoge.github.io/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="BigData" scheme="http://higoge.github.io/tags/BigData/"/>
    
      <category term="Hadoop" scheme="http://higoge.github.io/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>工具10：Windows10的hosts文件修改</title>
    <link href="http://higoge.github.io/2017/08/06/tools10/"/>
    <id>http://higoge.github.io/2017/08/06/tools10/</id>
    <published>2017-08-06T05:55:23.000Z</published>
    <updated>2018-02-20T23:09:16.680Z</updated>
    
    <content type="html"><![CDATA[<p>Windows10的hosts文件没有办法像Windows7直接进行修改，本文记录修改过程。<br><a id="more"></a></p><ul><li><code>win+r</code>开启运行对话框，输入<code>C:\Windows\System32\drivers\etc</code>，在hosts文件右键，选择安全标签。点击<strong>高级</strong>按钮。<br><img src="https://raw.githubusercontent.com/higoge/image/master/tools/04.png" alt="04.png"></li><li>点击<strong>更改权限</strong>。<br><img src="https://raw.githubusercontent.com/higoge/image/master/tools/05.png" alt="05.png"></li><li>点击<strong>添加</strong>。<br><img src="https://raw.githubusercontent.com/higoge/image/master/tools/06.png" alt="06.png"></li><li>点击<strong>选择主体</strong>。<br><img src="https://raw.githubusercontent.com/higoge/image/master/tools/07.png" alt="07.png"></li><li>点击<strong>高级</strong>。<br><img src="https://raw.githubusercontent.com/higoge/image/master/tools/08.png" alt="08.png"></li><li>点击<strong>立即查找</strong>。<br><img src="https://raw.githubusercontent.com/higoge/image/master/tools/09.png" alt="09.png"></li><li>选中本机用户。<br><img src="https://raw.githubusercontent.com/higoge/image/master/tools/10.png" alt="10.png"></li><li>点击<strong>确定</strong>。<br><img src="https://raw.githubusercontent.com/higoge/image/master/tools/11.png" alt="11.png"></li><li>点击<strong>完全控制</strong>。<br><img src="https://raw.githubusercontent.com/higoge/image/master/tools/12.png" alt="12.png"></li><li>一路确定，最后点击<strong>是</strong>。<br><img src="https://raw.githubusercontent.com/higoge/image/master/tools/13.png" alt="13.png"></li></ul><p>这样就完成了设置。hosts的修改规则是先写<code>IP</code>，后写<code>域名</code>。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">192.168.80.30 NN</span><br><span class="line">192.168.80.31 S1</span><br></pre></td></tr></table></figure></p><p>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Windows10的hosts文件没有办法像Windows7直接进行修改，本文记录修改过程。&lt;br&gt;
    
    </summary>
    
      <category term="系统工具" scheme="http://higoge.github.io/categories/%E7%B3%BB%E7%BB%9F%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="hosts" scheme="http://higoge.github.io/tags/hosts/"/>
    
  </entry>
  
  <entry>
    <title>Linux进阶13：rar和7z文件的压缩解压</title>
    <link href="http://higoge.github.io/2017/05/07/ad-linux13/"/>
    <id>http://higoge.github.io/2017/05/07/ad-linux13/</id>
    <published>2017-05-07T13:43:12.000Z</published>
    <updated>2017-12-14T00:13:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍<code>rar</code>和<code>7z</code>文件的压缩和解压，相关<code>RPM</code>包需到<a href="http://higoge.github.io/2017/04/23/ad-linux12/">RepoForge</a>去下载。</p><a id="more"></a><h2 id="rar压缩解压"><a href="#rar压缩解压" class="headerlink" title="rar压缩解压"></a>rar压缩解压</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install rar</span></span><br></pre></td></tr></table></figure><h3 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rar a 01.rar 01   <span class="comment"># 01可以是文件也可以是目录</span></span><br></pre></td></tr></table></figure><h3 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rar e 01.rar</span><br><span class="line">$ rar x 01.rar</span><br></pre></td></tr></table></figure><p><code>e</code>和<code>x</code>的区别是，<code>e</code>表示保留不原有的目录结构，文件直接解压当前目录，有相同命名的文件进行提醒是覆盖还是自动重命名。<code>x</code>表示保留原有的目录结构。<br><strong>注</strong>：解压不要安装<code>unrar</code>命令，因为此命令对目录结构的解压是完全混乱的。</p><h3 id="显示和检测"><a href="#显示和检测" class="headerlink" title="显示和检测"></a>显示和检测</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rar l 01.rar <span class="comment"># 显示01.rar的内容，但没有目录结构信息</span></span><br><span class="line">$ rar t 01.rar <span class="comment"># 测试01.rar，同时显示目录结构</span></span><br></pre></td></tr></table></figure><h2 id="7z压缩解压"><a href="#7z压缩解压" class="headerlink" title="7z压缩解压"></a>7z压缩解压</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install p7zip</span></span><br></pre></td></tr></table></figure><h3 id="压缩-1"><a href="#压缩-1" class="headerlink" title="压缩"></a>压缩</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ 7za a 01.7z 01    <span class="comment"># 01可以是文件也可以是目录</span></span><br></pre></td></tr></table></figure><h3 id="解压缩-1"><a href="#解压缩-1" class="headerlink" title="解压缩"></a>解压缩</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ 7za e 01.7z</span><br><span class="line">$ 7za x 01.7z</span><br></pre></td></tr></table></figure><p><code>e</code>和<code>x</code>同上。</p><h3 id="显示和检测-1"><a href="#显示和检测-1" class="headerlink" title="显示和检测"></a>显示和检测</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ 7za l 01.7z <span class="comment"># 显示01.7z的内容</span></span><br><span class="line">$ 7za t 01.7z <span class="comment"># 测试01.7z，同时显示目录结构</span></span><br></pre></td></tr></table></figure><p>如果本文对你有所帮助，请<a href="http://higoge.github.io/about/">小额赞助</a>。<br>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍&lt;code&gt;rar&lt;/code&gt;和&lt;code&gt;7z&lt;/code&gt;文件的压缩和解压，相关&lt;code&gt;RPM&lt;/code&gt;包需到&lt;a href=&quot;http://higoge.github.io/2017/04/23/ad-linux12/&quot;&gt;RepoForge&lt;/a&gt;去下载。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux进阶" scheme="http://higoge.github.io/categories/Linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Linux" scheme="http://higoge.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux进阶12：CentOS第三方库RepoForge(RpmForge)</title>
    <link href="http://higoge.github.io/2017/04/23/ad-linux12/"/>
    <id>http://higoge.github.io/2017/04/23/ad-linux12/</id>
    <published>2017-04-23T12:37:23.000Z</published>
    <updated>2017-12-13T13:06:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>CentOS很多软件没有直接提供Yum下载，RepoForge(原RPMForge)则提供了第三方软件的下载。</p><a id="more"></a><p><strong>注</strong>:<br>1) RepoForge需要联网使用。需要根据系统确定好<a href="http://repoforge.org/use" target="_blank" rel="noopener">安装版本</a>。<br>2) <a href="http://repoforge.org/" target="_blank" rel="noopener">RepoForge官网</a>提示，因为已经很久没有更新，所以有些包可能不是最新的。但有些工具能用即可，不需要安装最新的包。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>以CentOS6.x为例。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget http://repository.it4i.cz/mirrors/repoforge/redhat/el6/en/x86_64/rpmforge/RPMS/rpmforge-release-0.5.3-1.el6.rf.x86_64.rpm</span></span><br><span class="line"><span class="comment"># rpm -ivh rpmforge-release-0.5.3-1.el6.rf.x86_64.rpm</span></span><br><span class="line"><span class="comment"># yum clean all &amp;&amp; yum makecache</span></span><br></pre></td></tr></table></figure></p><h2 id="停用"><a href="#停用" class="headerlink" title="停用"></a>停用</h2><p>将<code>/etc/yum.repos.d/rpmforge.repo</code>中的<code>enabled=1</code>改为<code>enabled=0</code>即可，日常的<code>yum update</code>可以停用RepoForge。</p><p>如果本文对你有所帮助，请<a href="http://higoge.github.io/about/">小额赞助</a>。<br>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CentOS很多软件没有直接提供Yum下载，RepoForge(原RPMForge)则提供了第三方软件的下载。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux进阶" scheme="http://higoge.github.io/categories/Linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Linux" scheme="http://higoge.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux命令11：压缩及解压缩命令</title>
    <link href="http://higoge.github.io/2017/04/16/cm-linux11/"/>
    <id>http://higoge.github.io/2017/04/16/cm-linux11/</id>
    <published>2017-04-16T13:40:02.000Z</published>
    <updated>2017-12-12T14:01:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍Linux下常见压缩包的压缩和解压缩命令，主要有<code>zip</code>包和<code>tar</code>包。</p><a id="more"></a><h2 id="常见的压缩包"><a href="#常见的压缩包" class="headerlink" title="常见的压缩包"></a>常见的压缩包</h2><p><code>.zip</code>：zip压缩文件<br><code>.tar</code>：tar文件，未压缩<br><code>.tar.gz(.tgz)</code>：tar文件，通过gzip压缩<br><code>.tar.bz</code>：tar文件，通过bzip2压缩<br><code>.tar.xz</code>：tar文件，通过xz压缩</p><p><strong>注意</strong>：</p><ol><li>gzip、bzip2、xz只能压缩单个文件，无法压缩多个文件。所以要先将多个文件打包成tar包再进行压缩。</li><li>压缩比：xz &gt; bz2 &gt; gz &gt; zip。</li></ol><h2 id="zip包压缩及解压"><a href="#zip包压缩及解压" class="headerlink" title="zip包压缩及解压"></a>zip包压缩及解压</h2><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><p>1) <code>unzip</code>：zip包解压缩命令<br><code>-d</code>：指定到解压目录</p><p>2) <code>zip</code>：zip包压缩命令<br><code>-r</code>：递归打包</p><h3 id="肌肉训练"><a href="#肌肉训练" class="headerlink" title="肌肉训练"></a>肌肉训练</h3><p>1) 解压zip包<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ unzip xx.zip -d /tmp</span><br></pre></td></tr></table></figure></p><p>2) 压缩文件<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ zip 1.zip 1.txt</span><br></pre></td></tr></table></figure></p><p>3) 压缩文件夹<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ zip 1.zip -r /tmp/1</span><br></pre></td></tr></table></figure></p><h2 id="tar包压缩及解压"><a href="#tar包压缩及解压" class="headerlink" title="tar包压缩及解压"></a>tar包压缩及解压</h2><h3 id="tar命令"><a href="#tar命令" class="headerlink" title="tar命令"></a>tar命令</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar [参数] 文件名 -C 目的目录</span><br></pre></td></tr></table></figure><p><strong>常用参数</strong>:<br><code>-x</code>：解压<br><code>-c</code>：压缩<br><code>-z</code>：gzip包解压<br><code>-j</code>：bzip2包解压<br><code>-J</code>：xz包解压<br><code>-v</code>：显示当前解压的文件<br><code>-f</code>：后面跟文件名<br><code>-C</code>：解压到目录<br><code>-t</code>：查看压缩文件的内容</p><h3 id="肌肉训练-1"><a href="#肌肉训练-1" class="headerlink" title="肌肉训练"></a>肌肉训练</h3><p>1) 解压<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ tar xzvf xx.tar.gz -C /tmp    <span class="comment">#解压.tar.gz到/tmp</span></span><br><span class="line">$ tar xjvf xx.tar.bz2 -C /tmp   <span class="comment">#解压.tar.bz2到/tmp</span></span><br><span class="line">$ tar xJvf xx.tar.xz -C /tmp    <span class="comment">#解压.tar.xz到/tmp</span></span><br></pre></td></tr></table></figure></p><p>2) 压缩<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ tar czvf xx.tar.gz /tmp       <span class="comment">#将/tmp压缩.tar.gz</span></span><br><span class="line">$ tar cjvf xx.tar.bz2  /tmp     <span class="comment">#将/tmp压缩.tar.bz2</span></span><br><span class="line">$ tar cJvf xx.tar.xz /tmp       <span class="comment">#将/tmp压缩.tar.xz</span></span><br></pre></td></tr></table></figure></p><p>3) 查看压缩包<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar tf xx.tar.xz</span><br></pre></td></tr></table></figure></p><p>如果本文对你有所帮助，请<a href="http://higoge.github.io/about/">小额赞助</a>。<br>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍Linux下常见压缩包的压缩和解压缩命令，主要有&lt;code&gt;zip&lt;/code&gt;包和&lt;code&gt;tar&lt;/code&gt;包。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux命令" scheme="http://higoge.github.io/categories/Linux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="Linux" scheme="http://higoge.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux进阶11：CentOS系统救援</title>
    <link href="http://higoge.github.io/2017/04/09/ad-linux11/"/>
    <id>http://higoge.github.io/2017/04/09/ad-linux11/</id>
    <published>2017-04-09T13:16:18.000Z</published>
    <updated>2017-12-11T13:51:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>前两天同事升级<code>glibc</code>库，把<code>libc.so.6</code>指向到新的位置，与系统产生了不兼容，导致了<code>kernel panic</code>，使用<a href="http://higoge.github.io/2015/08/28/ad-linux05/">Linux进阶05：忘记root密码咋办</a>中在<code>grub</code>中添加<code>single</code>也无法进入系统。只能使用系统安全盘进行救援，过程记录在此。</p><a id="more"></a><p>1) 插入系统盘，并选择CD-Rom启动，进入CentOS的安装界面。选择<code>Rescue installed system</code>。</p><p><img src="https://raw.githubusercontent.com/higoge/image/master/adlinux/17.png" alt="17.png"></p><p>2) 语言选择默认，键盘选择默认。<br>3) <code>Setup Networking</code>页，选择<code>No</code>。<br>4) <code>Rescue</code>页选择<code>Continue</code>和两个<code>OK</code>。<br>5) 给出的三种选项，选择<code>shell Start shell</code>。</p><p><img src="https://raw.githubusercontent.com/higoge/image/master/adlinux/18.png" alt="18.png"></p><p>6) 启动了一个命令行，分别输入如下指令。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mount -o remount rw /</span></span><br><span class="line"><span class="comment"># chroot /mnt/sysimage/ # 报错，libc.so.6相关的错误</span></span><br><span class="line"><span class="comment"># cd /mnt/sysimage/lib64</span></span><br><span class="line"><span class="comment"># ln -sf libc-2.12.so libc.so.6</span></span><br><span class="line"><span class="comment"># chroot /mnt/sysimage # 成功</span></span><br><span class="line"><span class="comment"># exit # 退出shell</span></span><br><span class="line"><span class="comment"># reboot</span></span><br></pre></td></tr></table></figure></p><p><img src="https://raw.githubusercontent.com/higoge/image/master/adlinux/19.png" alt="19.png"></p><p><strong>注</strong>：如果启用了<code>SELinux</code>，那么启动过程时间较长。</p><p><strong>特别强调</strong>：尽量不要使用<code>root</code>用户进行操作。</p><p>如果本文对你有所帮助，请<a href="http://higoge.github.io/about/">小额赞助</a>。<br>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前两天同事升级&lt;code&gt;glibc&lt;/code&gt;库，把&lt;code&gt;libc.so.6&lt;/code&gt;指向到新的位置，与系统产生了不兼容，导致了&lt;code&gt;kernel panic&lt;/code&gt;，使用&lt;a href=&quot;http://higoge.github.io/2015/08/28/ad-linux05/&quot;&gt;Linux进阶05：忘记root密码咋办&lt;/a&gt;中在&lt;code&gt;grub&lt;/code&gt;中添加&lt;code&gt;single&lt;/code&gt;也无法进入系统。只能使用系统安全盘进行救援，过程记录在此。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux进阶" scheme="http://higoge.github.io/categories/Linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Linux" scheme="http://higoge.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux理论07：Linux的Swap分区大小</title>
    <link href="http://higoge.github.io/2017/04/02/th-linux07/"/>
    <id>http://higoge.github.io/2017/04/02/th-linux07/</id>
    <published>2017-04-02T06:28:11.000Z</published>
    <updated>2017-12-18T06:35:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>Linux中的Swap空间在物理内存（RAM）数量已满时使用。 如果系统需要更多的内存资源并且RAM已满，则内存中的不活动页面将移至交换空间。 因为交换空间位于硬盘上，其访问时间比物理内存慢。本文介绍下Swap分区大小与物理内存的关系。</p><a id="more"></a><h2 id="RedHat推荐大小"><a href="#RedHat推荐大小" class="headerlink" title="RedHat推荐大小"></a>RedHat推荐大小</h2><table><thead><tr><th>内存大小</th><th>Swap大小</th></tr></thead><tbody><tr><td>&lt;=4GB</td><td>&gt;=2GB</td></tr><tr><td>4GB ~ 16GB</td><td>&gt;=4GB</td></tr><tr><td>16GB ~ 64GB</td><td>&gt;=8GB</td></tr><tr><td>64GB ~ 256GB</td><td>&gt;=16GB</td></tr><tr><td>256GB ~ 512GB</td><td>&gt;=32GB</td></tr></tbody></table><h2 id="CentOS-Fedora推荐大小"><a href="#CentOS-Fedora推荐大小" class="headerlink" title="CentOS/Fedora推荐大小"></a>CentOS/Fedora推荐大小</h2><table><thead><tr><th>内存大小</th><th>Swap大小</th><th>允许休眠的Swap大小</th></tr></thead><tbody><tr><td>&lt;=2GB</td><td>内存2倍</td><td>内存3倍</td></tr><tr><td>2GB ~ 8GB</td><td>与内存相同</td><td>内存2倍</td></tr><tr><td>8GB ~ 64GB</td><td>4GB ~ 内存大小0.5倍</td><td>内存1.5倍</td></tr><tr><td>&gt;=64GB</td><td>至少4GB，根据负载确定</td><td>不推荐休眠</td></tr></tbody></table><h2 id="Oracle推荐大小"><a href="#Oracle推荐大小" class="headerlink" title="Oracle推荐大小"></a>Oracle推荐大小</h2><table><thead><tr><th>内存大小</th><th>Swap大小</th></tr></thead><tbody><tr><td>1GB ~ 2GB</td><td>内存1.5倍</td></tr><tr><td>2GB ~ 16GB</td><td>与内存相同</td></tr><tr><td>&gt;=16GB</td><td>16GB</td></tr></tbody></table><p>根据服务器实际负载，设置Swap分区大小。</p><p>如果本文对你有所帮助，请<a href="http://higoge.github.io/about/">小额赞助</a>。<br>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux中的Swap空间在物理内存（RAM）数量已满时使用。 如果系统需要更多的内存资源并且RAM已满，则内存中的不活动页面将移至交换空间。 因为交换空间位于硬盘上，其访问时间比物理内存慢。本文介绍下Swap分区大小与物理内存的关系。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux理论" scheme="http://higoge.github.io/categories/Linux%E7%90%86%E8%AE%BA/"/>
    
    
      <category term="Linux" scheme="http://higoge.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux命令09：Yum</title>
    <link href="http://higoge.github.io/2017/03/26/cm-linux10/"/>
    <id>http://higoge.github.io/2017/03/26/cm-linux10/</id>
    <published>2017-03-26T12:51:24.000Z</published>
    <updated>2017-12-11T08:07:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>YUM完全可以替代RPM命令。本文介绍<code>Yum</code>命令。</p><a id="more"></a><h2 id="使用前准备"><a href="#使用前准备" class="headerlink" title="使用前准备"></a>使用前准备</h2><p>使用Yum命令需要先配置好Yum库。请参考：<a href="http://higoge.github.io/2017/03/05/ad-linux09/">Linux进阶09：CentOS的Yum库设置</a>以及<a href="http://higoge.github.io/2017/03/12/ad-linux10/">Linux进阶10：Yum本地库制作</a></p><h2 id="常用指令解释"><a href="#常用指令解释" class="headerlink" title="常用指令解释"></a>常用指令解释</h2><p><code>yum install xxx</code>: 安装XXX，参数<code>-y</code>，自动确认<br><code>yum update [xxx]</code>: 更新<br><code>yum remove xxx</code>: 删除<br><code>yum clean all</code>: 清空缓存<br><code>yum info xxx</code>: 显示XXX包信息<br><code>yum localinstall A.rpm</code>: 本地安装A.rpm包，并自动安装关联包<br><code>yum makecache</code>: 建立缓存<br><code>yum grouplist</code>: 显示所有的组<br><code>yum groupinstall Group1</code>: 安装Group1套件<br><code>yum groupinfo Group1</code>: 显示Group1套件的信息<br><code>yum search [all] xxx</code>: 查询XXX包，<code>all</code>，同时查询描述信息<br><strong>注</strong>：执行安装删除等<code>yum</code>指令需要root用户，查询指令不需要root用户。</p><h2 id="常用套件"><a href="#常用套件" class="headerlink" title="常用套件"></a>常用套件</h2><p><code>yum grouplist</code>会显示已安装的套件及可安装的套件。经常需要安装的套件是包含<code>gcc</code>，<code>g++</code>等基础开发环境的<code>Development Tools</code>，以及桌面环境<code>Desktop</code>。<br>安装<code>Development Tools</code>命令如下。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum groupinstall -y Development Tools</span></span><br></pre></td></tr></table></figure></p><p>如果本文对你有所帮助，请<a href="http://higoge.github.io/about/">小额赞助</a>。<br>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;YUM完全可以替代RPM命令。本文介绍&lt;code&gt;Yum&lt;/code&gt;命令。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux命令" scheme="http://higoge.github.io/categories/Linux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="Linux" scheme="http://higoge.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux命令09：RPM</title>
    <link href="http://higoge.github.io/2017/03/19/cm-linux09/"/>
    <id>http://higoge.github.io/2017/03/19/cm-linux09/</id>
    <published>2017-03-19T09:48:11.000Z</published>
    <updated>2017-12-11T08:07:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>RPM是RPM Package Manager的缩写，是RedHat系发行版的主要的软件包管理工具。本文介绍RPM的基本命令。</p><a id="more"></a><h2 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h2><ul><li><code>-i</code>: 安装install<ul><li><code>-v</code>: 显示详细安装信息。</li><li><code>-h</code>: 显示安装进度，配合-v会得到更好的显示。</li></ul></li><li><code>-q</code>: 查询query<ul><li><code>-a</code>: 查询所有的安装包</li></ul></li><li><code>-e</code>: 删除erase</li></ul><h2 id="肌肉训练"><a href="#肌肉训练" class="headerlink" title="肌肉训练"></a>肌肉训练</h2><p>1) 安装包<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ivh unzip-6.0-5.el6.x86_64.rpm</span></span><br></pre></td></tr></table></figure></p><p>2) 删除包<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -e unzip</span></span><br></pre></td></tr></table></figure></p><p>3) 查询包<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -q unzip</span><br></pre></td></tr></table></figure></p><p>4) 模糊查询包<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -qa | grep un</span><br></pre></td></tr></table></figure></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>如果安装包有依赖关系，如安装<code>A.rpm</code>需要先安装<code>B.rpm</code>，<code>B.rpm</code>需要先安装<code>C.rpm</code>，那么需同时找齐<code>ABC</code>三个RPM包。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -ivh A.rpm B.rpm C.rpm</span></span><br></pre></td></tr></table></figure></p><p>很多时候，找依赖关系是很麻烦的事情，另外，安装位置也不好确定。所以一般不推荐使用RPM安装包。系统工具包一般使用Yum安装。如果有二进制压缩包，如JDK，直接使用非root用户解压使用。如果只提供RPM包，则用本文指令安装和删除，也可以用<code>yum localinstall A.rpm</code>安装。</p><p>如果本文对你有所帮助，请<a href="http://higoge.github.io/about/">小额赞助</a>。<br>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;RPM是RPM Package Manager的缩写，是RedHat系发行版的主要的软件包管理工具。本文介绍RPM的基本命令。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux命令" scheme="http://higoge.github.io/categories/Linux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="Linux" scheme="http://higoge.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux进阶10：Yum本地库制作</title>
    <link href="http://higoge.github.io/2017/03/12/ad-linux10/"/>
    <id>http://higoge.github.io/2017/03/12/ad-linux10/</id>
    <published>2017-03-12T13:34:54.000Z</published>
    <updated>2017-12-11T08:07:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://higoge.github.io/2017/03/05/ad-linux09/">Linux进阶09：CentOS的Yum库设置</a>介绍了在线的Yum库和离线的Yum库。但是因为CentOS的ISO文件有4G，携带不方便。本文介绍本地Yum库的制作。</p><a id="more"></a><h2 id="安装需要的工具包"><a href="#安装需要的工具包" class="headerlink" title="安装需要的工具包"></a>安装需要的工具包</h2><p>需要三个工具包：<code>createrepo</code>、<code>genisoimage</code>、<code>yum-utils</code>。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install -y createrepo genisoimage yum-utils</span></span><br></pre></td></tr></table></figure></p><h2 id="下载包"><a href="#下载包" class="headerlink" title="下载包"></a>下载包</h2><p>以安装<code>git</code>为例，首先下载与git安装相关的所有的包。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yumdownloader --resolve git --destdir ~/myrepo</span><br></pre></td></tr></table></figure></p><p><code>--resolve</code>：表示检测相关联的包。<br><code>--destdir</code>：表示下载的位置。</p><h2 id="制作本地库"><a href="#制作本地库" class="headerlink" title="制作本地库"></a>制作本地库</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ createrepo ~/myrepo/</span><br></pre></td></tr></table></figure><h2 id="打包传输"><a href="#打包传输" class="headerlink" title="打包传输"></a>打包传输</h2><p>打包有两种方式，一种是打包成tar包，一种是ISO文件。<br>tar包：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar czvf myrepo.tar.gz ~/myrepo</span><br></pre></td></tr></table></figure></p><p>ISO文件：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ genisoimage -r -o myrepo.iso ~/myrepo</span><br></pre></td></tr></table></figure></p><p><code>myrepo.tar.gz</code>和<code>myrepo.iso</code>就可以复制到其他机器上，进行解压或挂载。<br>注意：<br><code>/etc/repo.d/cdrom.repo</code>中<code>baseurl=file:///media/</code>改成实际地址（tar包解压路径或ISO挂载地址）即可。<code>file://</code>是本地文件协议，第三个<code>/</code>开始表示根路径。</p><p>如果本文对你有所帮助，请<a href="http://higoge.github.io/about/">小额赞助</a>。<br>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://higoge.github.io/2017/03/05/ad-linux09/&quot;&gt;Linux进阶09：CentOS的Yum库设置&lt;/a&gt;介绍了在线的Yum库和离线的Yum库。但是因为CentOS的ISO文件有4G，携带不方便。本文介绍本地Yum库的制作。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux进阶" scheme="http://higoge.github.io/categories/Linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Linux" scheme="http://higoge.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux进阶09：CentOS的Yum库设置</title>
    <link href="http://higoge.github.io/2017/03/05/ad-linux09/"/>
    <id>http://higoge.github.io/2017/03/05/ad-linux09/</id>
    <published>2017-03-05T12:08:27.000Z</published>
    <updated>2017-12-11T08:07:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍下CentOS的Yum在线库和离线库的设置。</p><a id="more"></a><h2 id="在线库"><a href="#在线库" class="headerlink" title="在线库"></a>在线库</h2><p>CentOS默认在线库，因为是国外的服务器，所以下载速度非常慢。推荐更换为<strong>163.com</strong>的在线库。可以参考<a href="http://mirrors.163.com/.help/centos.html" target="_blank" rel="noopener">163.com的CentOS的使用帮助</a><br>以下以<strong>CentOS6.x</strong>为例。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm –rf /etc/yum.repos.d/*</span></span><br><span class="line"><span class="comment"># wget http://mirrors.163.com/.help/CentOS6-Base-163.repo</span></span><br><span class="line"><span class="comment"># mv CentOS6-Base-163.repo /etc/yum.repos.d/</span></span><br></pre></td></tr></table></figure></p><p><strong>注意</strong>：<br>CentOS6-Base-163.repo文件中的<code>gpgcheck=1</code>改为<code>gpgcheck=0</code>，因为<a href="http://mirror.centos.org/centos/RPM-GPG-KEY-CentOS-6" target="_blank" rel="noopener">gpgkey</a>有可能无法访问，导致无法验证下载的rpm包。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sed -i "s/gpgcheck=1/gpgcheck=0/g" /etc/yum.repos.d/CentOS6-Base-163.repo</span></span><br><span class="line"><span class="comment"># yum clean all &amp;&amp; yum makecache</span></span><br></pre></td></tr></table></figure></p><h2 id="离线库"><a href="#离线库" class="headerlink" title="离线库"></a>离线库</h2><p>当CentOS服务无法上网时，可以使用CentOS的安装ISO文件作为本地离线Yum库，通过挂载ISO文件或CD-ROM来实现。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rm -rf /etc/yum.repos.d/* # 删除原有所有源</span></span><br><span class="line"><span class="comment"># mount -o loop CentOS-6.9-x86_64-bin-DVD1.iso /media/ # 挂载CentOS的iso文件到/media</span></span><br><span class="line"><span class="comment"># vi /etc/yum.repos.d/cdrom.repo</span></span><br></pre></td></tr></table></figure></p><p>内容如下。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[cdrom]</span><br><span class="line">name=cdrom</span><br><span class="line">baseurl=file:///media/ <span class="comment"># 本地yum源地址</span></span><br><span class="line"><span class="built_in">enable</span>=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure></p><p>再重新更新yum缓存<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum clean all &amp;&amp; yum makecache</span></span><br></pre></td></tr></table></figure></p><p>或者直接挂在CD-ROM，其他步骤同上。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mount /dev/cdrom /media</span></span><br></pre></td></tr></table></figure></p><p>如果本文对你有所帮助，请<a href="http://higoge.github.io/about/">小额赞助</a>。<br>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍下CentOS的Yum在线库和离线库的设置。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux进阶" scheme="http://higoge.github.io/categories/Linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Linux" scheme="http://higoge.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>网络04：双路由器无线桥接设置及副路由器设置原则</title>
    <link href="http://higoge.github.io/2017/02/14/net04/"/>
    <id>http://higoge.github.io/2017/02/14/net04/</id>
    <published>2017-02-14T13:55:17.000Z</published>
    <updated>2017-12-11T08:07:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近搭建了两个路由器的无线桥接，因为不方便重新布线，无线桥接可以较好的解决无线信号放大的问题。<br><a id="more"></a></p><h2 id="设置过程"><a href="#设置过程" class="headerlink" title="设置过程"></a>设置过程</h2><h3 id="主路由器设置"><a href="#主路由器设置" class="headerlink" title="主路由器设置"></a>主路由器设置</h3><ol><li>WAN口设置。</li><li>LAN口设置。</li><li>DHCP设置。</li><li>无线设置，包括SSID，密码以及信道。<strong>注意</strong>：信道需要固定，而不要设置为自动。</li></ol><h3 id="副路由器设置"><a href="#副路由器设置" class="headerlink" title="副路由器设置"></a>副路由器设置</h3><ol><li>关闭DHCP。</li><li>LAN口设置，不要与主路由器的LAN口设置为相同的地址，也不要设置为主路由器的DHCP地址池的地址。</li><li>无线设置，设施SSID与主路由器相同，密码与主路由器相同，信道与主路由器相同。</li><li>开启WDS功能，点击扫描，找到主路由器的SSID，点击连接，最后输入密钥。<br><img src="https://raw.githubusercontent.com/higoge/image/master/network/04.png" alt="04"><br><img src="https://raw.githubusercontent.com/higoge/image/master/network/05.png" alt="05"></li></ol><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>副路由器的信道必须与主路由器相同。</li><li>副路由器的SSID和接入密码，可以与主路由器不同，但如果在两个路由器都能覆盖到的位置，移动设备不会切换信号。这就导致就算某个路由器信号更强，设备也不会去连接。所以建议设置两个路由器相同的的SSID和接入密码。</li><li>副路由器接入，最好采用星型拓扑结构。主路由器为A，副路由器B和C，那么接入方式为副路由器B→主路由器A←副路由器C。最好不要采用直线型拓扑结构，如副路由器C→副路由器B→主路由器A，若必须使用直线型结构，不要超过<strong>三级</strong>。</li><li>为保证桥接成功且运行稳定，副路由器扫描主路由器的信号强度大于<strong>20dB</strong>。</li><li>如果主路由器和副路由器隐藏了SSID，可能会因距离问题导致的连接不成功。此现象需要具体问题具体分析。本汪在试验中，开启SSID广播可以桥接成功，关闭SSID则无法桥接。据猜测，关闭了SSID广播会导致功率下降，信号强度减弱，桥接就不成功。</li></ol><p>参考资料：<a href="http://service.tp-link.com.cn/detail_article_1059.html" target="_blank" rel="noopener">[WDS桥接功能] 如何扩展无线网络？</a></p><h2 id="副路由器的设置原则"><a href="#副路由器的设置原则" class="headerlink" title="副路由器的设置原则"></a>副路由器的设置原则</h2><p>在<a href="http://higoge.github.io/2015/12/17/net01/">网络01：双无线路由器无缝对接设置</a>中提到了无线路由器的组成部分。副路由器作为主路由器的扩展，只是交换机层面的扩展，很多功能是不需要的。</p><ol><li>DHCP不需要，由主路由器分配IP地址即可。</li><li>WAN口不用设置，不会从副路由器的WAN口传输数据。</li><li>LAN口设置的ip，是所接入设备的网关，同时也是路由器管理的登入IP地址。因为主路由器设置了网关，所以副路由器的LAN口设置只为管理副路由器使用。可以设置为与主路由器LAN口不同网段的IP地址，也可以是相同网段，但不常用的IP地址。</li><li>两个路由器之间设置为相同的SSID和接入密码。</li><li>无线桥接的两个路由器的信道是相同的，可以理解为对无线信号接收后再放大，也就是<em>中继</em>。使用网线进行桥接，无线信道设置为不同，并且信号范围不交叉，如1,6,11。结合3，两种方式均可保证移动设备无缝切换。</li></ol><p>如果本文对你有所帮助，请<a href="http://higoge.github.io/about/">小额赞助</a>。<br>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近搭建了两个路由器的无线桥接，因为不方便重新布线，无线桥接可以较好的解决无线信号放大的问题。&lt;br&gt;
    
    </summary>
    
      <category term="网络" scheme="http://higoge.github.io/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="network" scheme="http://higoge.github.io/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>Linux进阶08：SSH相关操作</title>
    <link href="http://higoge.github.io/2017/02/08/ad-linux08/"/>
    <id>http://higoge.github.io/2017/02/08/ad-linux08/</id>
    <published>2017-02-08T13:03:30.000Z</published>
    <updated>2017-12-11T08:07:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>SSH (Secure Shell)，为远程登录会话和其他网络服务提供加密传输和使用环境。传统的网络服务都是明文传输(如Telnet，FTP)，包括明文数据、明文用户名和密码，极易受到中间人攻击。SSH目前是比较可靠的通讯方式；同时，SSH压缩其传输的数据，可以加快传输速度，是目前最为常用的远程登录(代替Telnet)和文件传输(SFTP代替FTP)工具。本文介绍相关Linux下SSH服务及客户端的配置以及SSH相关命令。<br><a id="more"></a><br>之前的博客有提到过SSH的文章如下：</p><ul><li><a href="http://higoge.github.io/2015/07/15/tools01/">工具01：Cygwin的安装配置</a>：Cygwin中安装SSH。</li><li><a href="http://higoge.github.io/2015/07/23/tools03/">工具03：PuTTY常用配置</a>：Windows的SSH工具。</li><li><a href="http://higoge.github.io/2015/07/24/tools04/">工具04：PuTTY的小伙伴PuTTYgen和Plink</a>：Windows下的SSH密钥生成器。</li><li><a href="http://higoge.github.io/2016/02/15/tools09/#Sftp_u63D2_u4EF6">工具09：资源管理器替代者：Total Commander</a>：TC的Sftp插件。</li><li><a href="http://higoge.github.io/2017/02/04/ad-linux07/#u4F7F_u7528SSH_u96A7_u9053_u52A0_u5BC6">Linux进阶07：Linux远程桌面配置</a>：SSH隧道。</li></ul><h2 id="SSH的安全验证"><a href="#SSH的安全验证" class="headerlink" title="SSH的安全验证"></a>SSH的安全验证</h2><p>SSH提供两种级别的安全验证。</p><ul><li>第一种级别（基于密码的安全验证），知道帐号和密码，就可以登录到远程主机，并且所有传输的数据都会被加密。但是，可能会有别的服务器在冒充真正的服务器，无法避免被“中间人”攻击。</li><li>第二种级别（基于密钥的安全验证），需要依靠密钥，也就是你必须为自己创建一对密钥，并把公有密钥放在需要访问的服务器上。客户端软件会向服务器发出请求，请求用你的密钥进行安全验证。服务器收到请求之后，先在你在该服务器的用户根目录下寻找你的公有密钥，然后把它和你发送过来的公有密钥进行比较。如果两个密钥一致，服务器就用公有密钥加密“质询”（challenge）并把它发送给客户端软件。从而避免被“中间人”攻击。<br>以上内容来自<a href="https://zh.wikipedia.org/wiki/Secure_Shell" target="_blank" rel="noopener">维基百科</a>。</li></ul><h2 id="SSH服务端公有密钥查询和比对"><a href="#SSH服务端公有密钥查询和比对" class="headerlink" title="SSH服务端公有密钥查询和比对"></a>SSH服务端公有密钥查询和比对</h2><p>服务端执行如下命令，查询公有密钥(fingerprint)。默认是通过SHA256的形式展现，可以使用<code>ssh-keygen</code>的<code>-E md5</code>参数，改变公有密钥显示方式为MD5。为了避免中间人攻击，可以提前把公有密钥发送个客户端，以便进行对照。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span> file <span class="keyword">in</span> /etc/ssh/*sa_key.pub; <span class="keyword">do</span> ssh-keygen -lf <span class="variable">$file</span>; <span class="keyword">done</span></span><br><span class="line">1024 SHA256:7fEJPt+wnqW89TeckoMFEMuj6rLXAjgwup2cgfXRY/0 root@Arch (DSA)</span><br><span class="line">256 SHA256:fbk0IHk1RAOWFFmN4TC7qgqIGTJ1lYvxRsiAjWOdzVc root@Arch (ECDSA)</span><br><span class="line">2048 SHA256:QP5Ku0CIEclNQQwgTguQMOXWugyVfiVsIT7MFlPOynE root@Arch (RSA)</span><br><span class="line"></span><br><span class="line">$ <span class="keyword">for</span> file <span class="keyword">in</span> /etc/ssh/*sa_key.pub; <span class="keyword">do</span> ssh-keygen -E md5 -lf <span class="variable">$file</span>; <span class="keyword">done</span></span><br><span class="line">1024 MD5:a4:93:01:1c:f2:e4:de:c3:b8:92:0e:b5:0e:12:5f:81 root@Arch (DSA)</span><br><span class="line">256 MD5:1d:f8:f6:1c:6f:10:a1:<span class="built_in">fc</span>:50:f5:87:e2:da:e9:29:84 root@Arch (ECDSA)</span><br><span class="line">2048 MD5:19:53:68:4f:df:3f:56:8a:9f:5b:4e:7e:30:be:d7:63 root@Arch (RSA)</span><br></pre></td></tr></table></figure></p><p><strong>注</strong>：CentOS6.5默认使用MD5的方式进行显示，并且不支持<code>-E</code>参数。</p><p>PuTTY客户端<strong>首次</strong>登录服务端的公有密钥对比，采用的是MD5的方式。通讯密钥是RSA。<br><img src="https://raw.githubusercontent.com/higoge/image/master/adlinux/16.png" alt="16.png"></p><p>ssh命令(如Windows的Cygwin)<strong>首次</strong>登录也可以进行公有密钥对比，默认是SHA256的形式。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ssh 192.168.80.23</span><br><span class="line">The authenticity of host <span class="string">'192.168.80.23 (192.168.80.23)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:fbk0IHk1RAOWFFmN4TC7qgqIGTJ1lYvxRsiAjWOdzVc.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)?</span></span><br></pre></td></tr></table></figure></p><p>或者指定为MD5的形式。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -o FingerprintHash=md5 192.168.80.23</span><br><span class="line">The authenticity of host <span class="string">'192.168.80.23 (192.168.80.23)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is MD5:1d:f8:f6:1c:6f:10:a1:fc:50:f5:87:e2:da:e9:29:84.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)?</span></span><br></pre></td></tr></table></figure></p><p>在<code>~/.ssh/known_hosts</code>中会保存登录过的服务器的公有密钥信息，可以通过如下命令进行查询和比对。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -F 192.168.80.23 -l</span><br><span class="line"><span class="comment"># Host 192.168.80.23 found: line 1</span></span><br><span class="line">192.168.80.23 ECDSA SHA256:fbk0IHk1RAOWFFmN4TC7qgqIGTJ1lYvxRsiAjWOdzVc</span><br><span class="line"></span><br><span class="line">$ ssh-keygen -F 192.168.80.23 -l -E md5</span><br><span class="line"><span class="comment"># Host 192.168.80.23 found: line 1</span></span><br><span class="line">192.168.80.23 ECDSA MD5:1d:f8:f6:1c:6f:10:a1:<span class="built_in">fc</span>:50:f5:87:e2:da:e9:29:84</span><br></pre></td></tr></table></figure></p><h2 id="SSH客户端常用命令"><a href="#SSH客户端常用命令" class="headerlink" title="SSH客户端常用命令"></a>SSH客户端常用命令</h2><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p>可以使用如下两种方式登录。<br>a. 用户名@主机地址<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh learnit@192.168.80.23</span><br></pre></td></tr></table></figure></p><p>b. 使用<code>-l</code>参数<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh 192.168.80.23 -l learnit</span><br></pre></td></tr></table></figure></p><h3 id="执行一次性命令"><a href="#执行一次性命令" class="headerlink" title="执行一次性命令"></a>执行一次性命令</h3><p>如果只想在服务器上，快速执行一条命令并返回结果，不需要登录、输入命令、退出等多个操作，只需要在登录时后添加命令即可。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ ssh learnit@192.168.80.23 <span class="string">'ls -l'</span></span><br><span class="line">total 32</span><br><span class="line">drwxr-xr-x 2 learnit learnit 4096 Feb 15  2016 Desktop</span><br><span class="line">drwx------ 2 learnit learnit 4096 Jan 29 11:19 Downloads</span><br><span class="line">drwxr-xr-x 3 learnit learnit 4096 Jan 25 11:46 git</span><br><span class="line">drwxr-xr-x 4 learnit learnit 4096 Jan 29 11:21 <span class="built_in">local</span></span><br><span class="line">drwxr-xr-x 2 learnit learnit 4096 Jan 13  2016 python</span><br><span class="line">drwxr-xr-x 5 learnit learnit 4096 Jan 27 10:03 temp</span><br></pre></td></tr></table></figure></p><h3 id="客户端生成密钥"><a href="#客户端生成密钥" class="headerlink" title="客户端生成密钥"></a>客户端生成密钥</h3><p>使用<code>ssh-keygen</code>命令生成本地密钥，默认存放在<code>~/.ssh/</code>目录下。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/home/Jeremy/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /home/Jeremy/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /home/Jeremy/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:VrUMOvTHxh53W+Dm2ioPRb9Qa94nv47epD1lV2IjLLk Jeremy@Jeremy-Dell</span><br><span class="line">The key<span class="string">'s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|        . . . .  |</span></span><br><span class="line"><span class="string">|       . o * o . |</span></span><br><span class="line"><span class="string">|        o ooX = o|</span></span><br><span class="line"><span class="string">|         oo=oB+o+|</span></span><br><span class="line"><span class="string">|        S  o+o=+.|</span></span><br><span class="line"><span class="string">|       .  E. * o+|</span></span><br><span class="line"><span class="string">|          . . =o=|</span></span><br><span class="line"><span class="string">|          .. .*+.|</span></span><br><span class="line"><span class="string">|           o++.=+|</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure></p><p>常用参数：<br><code>-t</code>：密钥类型，dsa，ecdsa，ed25519，rsa，rsa1，默认rsa。<br><code>-C</code>：对密钥的注释。<br><code>-f</code>：密钥存放位置，推荐使用绝对路径。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">'second ssh key'</span> -f ~/.ssh/id_rsa_second</span><br></pre></td></tr></table></figure></p><p>此命令表示生产一个叫<code>second ssh key</code>的rsa密钥，存放位置是<code>~/.ssh/id_rsa_second</code>。</p><h3 id="发送密钥到服务端"><a href="#发送密钥到服务端" class="headerlink" title="发送密钥到服务端"></a>发送密钥到服务端</h3><p>有两种方式发送密钥。发送成功后，即可免密码登录。<br>a. 使用<code>ssh-copy-id</code>命令<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-copy-id learnit@192.168.80.23</span><br><span class="line">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: <span class="string">"/home/Jeremy/.ssh/id_rsa_second.pub"</span></span><br><span class="line">/usr/bin/ssh-copy-id: INFO: attempting to <span class="built_in">log</span> <span class="keyword">in</span> with the new key(s), to filter out any that are already installed</span><br><span class="line">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- <span class="keyword">if</span> you are prompted now it is to install the new keys</span><br><span class="line">learnit@192.168.80.23<span class="string">'s password:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Number of key(s) added: 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Now try logging into the machine, with:   "ssh '</span>learnit@192.168.80.23<span class="string">'"</span></span><br><span class="line"><span class="string">and check to make sure that only the key(s) you wanted were added.</span></span><br></pre></td></tr></table></figure></p><p>常用参数：<br><code>-i</code>：指定密钥的绝对路径。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-copy-id -i ~/.ssh/id_rsa_second learnit@192.168.80.23</span><br></pre></td></tr></table></figure></p><p>b. 使用一次性命令<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh learnit@192.168.80.23 <span class="string">'mkdir -p .ssh &amp;&amp; cat &gt;&gt; .ssh/authorized_keys'</span> &lt; ~/.ssh/id_rsa.pub</span><br><span class="line">learnit@192.168.80.23<span class="string">'s password:</span></span><br></pre></td></tr></table></figure></p><p>密钥发送成功后，即可免密码登录。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ssh learnit@192.168.80.23</span><br><span class="line">Last login: Mon Feb  6 16:06:07 2017 from 192.168.80.2</span><br><span class="line">➜  /home/learnit &gt;</span><br></pre></td></tr></table></figure></p><h3 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h3><p>每次输入用户名@主机地址，如果觉得比较麻烦，可以通过修改<code>~/.ssh/config</code>文件，简化输入。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~/.ssh/config</span><br><span class="line">Host arch</span><br><span class="line">HostName 192.168.80.23</span><br><span class="line">User learnit</span><br><span class="line">IdentityFile /home/Jeremy/.ssh/id_rsa</span><br></pre></td></tr></table></figure></p><p>登录命令可以改为：<code>ssh arch</code>。<br>使用其他用户登录可以使用命令：<code>ssh root@arch</code>。<br>客户端<code>config</code>参数详情，请参考<code>man 5 ssh_config</code>。</p><h3 id="Github多用户使用"><a href="#Github多用户使用" class="headerlink" title="Github多用户使用"></a>Github多用户使用</h3><p>如果有多个Github帐户，两个帐户无法使用同一个密钥。解决方法如下。<br>a. 查看哪个帐户使用了key<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T -ai ~/.ssh/id_rsa git@github.com</span><br><span class="line">Hi higoge! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure></p><p>b. 生成新的密钥。<br>c. 配置config文件<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~/.ssh/config</span><br><span class="line"><span class="comment"># Default github user(higoge@gmail.com)</span></span><br><span class="line">Host github.com <span class="comment">#任意填写</span></span><br><span class="line">HostName github.com</span><br><span class="line">User git</span><br><span class="line">IdentityFile /home/learnit/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line"><span class="comment"># second user</span></span><br><span class="line">Host github-learnit</span><br><span class="line">HostName github.com</span><br><span class="line">User git</span><br><span class="line">IdentityFile /home/learnit/.ssh/id_rsa_second</span><br></pre></td></tr></table></figure></p><p>d. clone仓库<br>默认用户clone方式不变，第二个用户主机地址使用<code>github-learnit</code>。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> git@github-learnit:higoge/file.git</span><br></pre></td></tr></table></figure></p><h3 id="SSH隧道"><a href="#SSH隧道" class="headerlink" title="SSH隧道"></a>SSH隧道</h3><p>SSH隧道常用参数如下。<br><code>-N</code>：不运行远程命令，仅转发端口。<br><code>-f</code>：后台运行<code>ssh</code>命令。<br><code>-C</code>: 对传输的数据进行压缩。<br><code>-D</code>：连接远程服务器，监听本地端口作为本地Socks5服务，所有连接都将通过本隧道发送给远端服务器。<br><code>-L</code>：监听本地端口，对这个端口的数据操作会通过隧道发给远程服务器的对应端口。<br><code>-R</code>：监听远程端口，对这个端口的数据操作会通过隧道发给本地服务的对应端口。</p><p>a. Socks5服务<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh learnit@192.168.80.23 -D 1080 -o ServerAliveInterval=60 -C -f -N</span></span><br></pre></td></tr></table></figure></p><p><code>-o ServerAliveInterval=60</code>：设置保活时间间隔，时间为60秒。<br>此命令可以启动本地1080端口，作为Socks5的服务端口。</p><p>b. 远程服务穿透到本地某端口。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -L 5902:127.0.0.1:5902 -N -f learnit@192.168.80.6</span><br></pre></td></tr></table></figure></p><p>此命令的作用是加密远程桌面的连接，将远程桌面服务的5902端口穿透到本地的5902端口。</p><p>c. 本地服务穿透到外网端口<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -f -N -R remote_ip:80:localhost:4000 root@remote_ip</span><br></pre></td></tr></table></figure></p><p>此命令将本地博客框架hexo的web端口4000，映射到远端服务器的80端口，通过浏览器访问<code>http://remote_ip</code>即能够访问本地的4000端口。</p><h2 id="SSH服务端配置"><a href="#SSH服务端配置" class="headerlink" title="SSH服务端配置"></a>SSH服务端配置</h2><p>SSH服务端配置文件地址为<code>/etc/ssh/sshd_config</code>。每次修改完，请重启<code>sshd</code>服务。服务端<code>config</code>参数详情，请参考<code>man 5 sshd_config</code>。</p><h3 id="限制模式"><a href="#限制模式" class="headerlink" title="限制模式"></a>限制模式</h3><p><code>StrictModes</code>参数表示<code>~/.ssh</code>文件夹的限制模式，如果设置为<code>yes</code>，那么<code>~/.ssh</code>文件夹权限为<code>700</code>，<code>~/.ssh/authorized_keys</code>文件权限必须是<code>600</code>。<br>如若密钥配置成功，但登录是还需要密码，请修改SSH文件和文件夹权限，或者将<code>StrictModes</code>设置为<code>no</code>。</p><h3 id="登录较慢"><a href="#登录较慢" class="headerlink" title="登录较慢"></a>登录较慢</h3><p>SSH如果出现登录卡顿的情况，可以使用如下命令进行调试。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -vvv learnit@192.168.80.23</span><br></pre></td></tr></table></figure></p><p>一般会卡在<code>debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password</code>这句话。<br>修改如下参数即可解决。<br><code>UseDNS</code>改为<code>no</code>。<br><code>GSSAPIAuthentication</code>改为<code>no</code>。</p><h3 id="限制root用户登录"><a href="#限制root用户登录" class="headerlink" title="限制root用户登录"></a>限制root用户登录</h3><p><code>PermitRootLogin</code>参数可以限制root用户的登录。<br>常用参数如下：<br><code>yes</code>：root用户可以登录。<br><code>prohibit-password</code>：root用户不能通过输入密码登录。<br><code>without-password</code>：root用户不能通过输入密码登录。<br><code>forced-commands-only</code>：root用户仅可以执行特定命令。<br><code>no</code>：root用户不能登录。</p><p>如果设置了<code>forced-commands-only</code>模式，特定命令表示设置在<code>/root/.ssh/authorized_keys</code>中的添加的命令。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat ~/.ssh/authorized_keys</span></span><br><span class="line"><span class="built_in">command</span>=<span class="string">"ls -l"</span> ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC+H6MNVJCpKx24FPvkX7gVE+bmjSjferbGxRZ/R3iPk9QBCZp2OrUcjhyWrjEjpV9DY1wXlDTUrg3+2HFqnhz+lEvhM0vl2Hlu3AgJsTEbWddDSZGayUTxCBg2mKe4Lks6MvVOubw3b+FmCSHtGc2mPfBtKNkr0GFWGZFXgEJKiZ9jFzx39nLaw0ZgR0WXkoRe2Nby+xyYsO2gs1u7j75CqFdKHs5zoLAV8C0d1x5tdFknuSGdMdYrbgpquSfrlQMJUIwJTzUnGLyE0a01IPs6OQ+c8LuuxDnEO8SCRDiJIh8Wyct1VWR3j3td/yq40NEyjPXqtd7bHVr8aBDjUb3t win10-cygwin</span><br></pre></td></tr></table></figure></p><p>使用root用户登录后反馈如下。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ssh root@192.168.80.23</span><br><span class="line">total 72</span><br><span class="line">-rw-------. 1 root root  1384 Nov 29 04:31 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root 49565 Nov 29 04:31 install.log</span><br><span class="line">-rw-r--r--. 1 root root 10033 Nov 29 04:28 install.log.syslog</span><br><span class="line">Connection to 192.168.80.6 closed.</span><br></pre></td></tr></table></figure></p><p>root用户登录成功后，直接执行<code>authorized_keys</code>中的command命令，反馈结果后，断开连接。</p><p>如果本文对你有所帮助，请<a href="http://higoge.github.io/about/">小额赞助</a>。<br>~~ EOF ~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SSH (Secure Shell)，为远程登录会话和其他网络服务提供加密传输和使用环境。传统的网络服务都是明文传输(如Telnet，FTP)，包括明文数据、明文用户名和密码，极易受到中间人攻击。SSH目前是比较可靠的通讯方式；同时，SSH压缩其传输的数据，可以加快传输速度，是目前最为常用的远程登录(代替Telnet)和文件传输(SFTP代替FTP)工具。本文介绍相关Linux下SSH服务及客户端的配置以及SSH相关命令。&lt;br&gt;
    
    </summary>
    
      <category term="Linux进阶" scheme="http://higoge.github.io/categories/Linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Linux" scheme="http://higoge.github.io/tags/Linux/"/>
    
      <category term="PuTTy" scheme="http://higoge.github.io/tags/PuTTy/"/>
    
  </entry>
  
</feed>
